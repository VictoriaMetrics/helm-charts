# Default values for victoria-metrics.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Tour k8s cluster domain suffix, uses for pods' FQDN
## Ref: https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/
##
clusterDomainSuffix: cluster.local
printNotes: true

rbac:
  create: true
  pspEnabled: true
  namespaced: false
  extraLabels: {}
  # annotations: {}

serviceAccount:
  create: true
  # name:
  extraLabels: {}
  # annotations: {}

vmselect:
  enabled: true
  name: vmselect
  image:
    repository: victoriametrics/vmselect
    tag: v1.41.0-cluster
    pullPolicy: IfNotPresent
  priorityClassName: ""
  fullnameOverride: ""
  ## If true suppress rendering `--stroageNodes`, they can be re-defined in exrtaArgs
  suppresStorageFQDNsRender: false
  extraArgs: {}
  annotations: {}
  extraLabels: {}

  ## See `kubectl explain poddisruptionbudget.spec` for more
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  podDisruptionBudget:
    enabled: false
    # minAvailable: 1
    # maxUnavailable: 1
    labels: {}

  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule"

  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
    ## Pod affinity
    ##
  affinity: {}
  podAnnotations: {}
  replicaCount: 2
  resources: {}
    # limits:
    #   cpu: 50m
    #   memory: 64Mi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi

  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContext: {}
  ## Root folder for cache
  ##
  cacheMountPath: /cache
  service:
    annotations: {}
    labels: {}
    clusterIP: ""
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    servicePort: 8481
    type: ClusterIP
  ingress:
    enabled: false
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    extraLabels: {}
    hosts: []
    #   - name: vmselect.local
    #     path: /select
    #    port: http
    tls: []
    #   - secretName: vmselect-ingress-tls
    #     hosts:
    #       - vmselect.local
  statefulSet:
    ## Creates statefulset instead of deployment, useful when you want to keep the cache
    enabled: false
    podManagementPolicy: OrderedReady
    ## Headless service for statefulset
    service:
      annotations: {}
      labels: {}
      servicePort: 8481
  persistentVolume:
    ## If true, vmselect will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: false

    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    accessModes:
      - ReadWriteOnce
    annotations: {}

    ## Requires vmselect.persistentVolume.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## Vmselect data Persistent Volume mount root path
    ##
    size: 2Gi
    subPath: ""
  serviceMonitor:
    enabled: false
    extraLabels: {}
    annotations: {}
#    interval: 15s
#    scrapeTimeout: 5s

vminsert:
  enabled: true
  name: vminsert
  image:
    repository: victoriametrics/vminsert
    tag: v1.41.0-cluster
    pullPolicy: IfNotPresent
  priorityClassName: ""
  fullnameOverride: ""
  extraArgs: {}
  annotations: {}
  extraLabels: {}
  ## If true suppress rendering `--stroageNodes`, they can be re-defined in exrtaArgs
  suppresStorageFQDNsRender: false

  ## See `kubectl explain poddisruptionbudget.spec` for more
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  podDisruptionBudget:
    enabled: false
    # minAvailable: 1
    # maxUnavailable: 1
    labels: {}

  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule"

  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## Pod affinity
  ##
  affinity: {}
  podAnnotations: {}
  replicaCount: 2
  resources: {}
    # limits:
    #   cpu: 50m
    #   memory: 64Mi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi
  securityContext: {}
  service:
    annotations: {}
    labels: {}
    clusterIP: ""
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    servicePort: 8480
    type: ClusterIP
  ingress:
    enabled: false
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'
    extraLabels: {}
    hosts: []
    # - name: vminsert.local
    #   path: /insert
    #   port: http
    tls: []
    #   - secretName: vminsert-ingress-tls
    #     hosts:
    #       - vminsert.local
  serviceMonitor:
    enabled: false
    extraLabels: {}
    annotations: {}
#    interval: 15s
#    scrapeTimeout: 5s

vmstorage:
  enabled: true
  name: vmstorage
  image:
    repository: victoriametrics/vmstorage
    tag: v1.41.0-cluster
    pullPolicy: IfNotPresent
  priorityClassName: ""
  fullnameOverride:
  ## Data retention period in month
  ##
  retentionPeriod: 1
  ## Additional vmstorage container arguments
  ##
  extraArgs: {}

  ## See `kubectl explain poddisruptionbudget.spec` for more
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  podDisruptionBudget:
    enabled: false
    # minAvailable: 1
    # maxUnavailable: 1
    labels: {}

  ## Node tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule"

  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  persistentVolume:
    ## If true,  vmstorage will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: true

    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    accessModes:
      - ReadWriteOnce
    annotations: {}

    ## Requires vmstorage.persistentVolume.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## Vmstorage data Persistent Volume mount root path
    ##
    mountPath: /storage
    size: 8Gi
    subPath: ""

  podAnnotations: {}
  annotations: {}
  extraLabels: {}
  replicaCount: 2
  podManagementPolicy: OrderedReady

  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 500m
    #   memory: 512Mi

  ## Security context to be added to server pods
  ##
  securityContext: {}
  service:
    annotations: {}
    labels: {}
    servicePort: 8482
    vminsertPort: 8400
    vmselectPort: 8401
  terminationGracePeriodSeconds: 60
  probe:
    readiness:
      initialDelaySeconds: 5
      periodSeconds: 15
      timeoutSeconds: 5
      failureThreshold: 3
    liveness:
      initialDelaySeconds: 5
      periodSeconds: 15
      timeoutSeconds: 5
      failureThreshold: 3
  serviceMonitor:
    enabled: false
    extraLabels: {}
    annotations: {}
#    interval: 15s
#    scrapeTimeout: 5s

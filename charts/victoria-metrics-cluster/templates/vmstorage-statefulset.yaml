{{- $global := (dict "Values" (deepCopy .Values) "Release" (deepCopy .Release) "Chart" (deepCopy .Chart) "Template" (deepCopy .Template)) -}}
{{- $app := .Values.vmstorage }}
{{- if $app.enabled -}}
{{ include "chart.vmbackupmanager.enforce_license" . }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  {{- with $app.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
  {{- $ctx := mergeOverwrite (deepCopy $global) (dict "extraLabels" $app.extraLabels) }}
  labels: {{ include "victoria-metrics.vmstorage.labels" $ctx | nindent 4 }}
  name: {{ template "victoria-metrics.vmstorage.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ template "victoria-metrics.vmstorage.fullname" . }}
  selector:
    matchLabels: {{ include "victoria-metrics.vmstorage.matchLabels" . | nindent 6 }}
  replicas: {{ $app.replicaCount }}
  podManagementPolicy: {{ $app.podManagementPolicy }}
  template:
    metadata:
      {{- with $app.podAnnotations }}
      annotations: {{ toYaml . | nindent 8 }}
      {{- end }}
      labels: {{ include "victoria-metrics.vmstorage.podLabels" $ctx | nindent 8 }}
    spec:
      {{- with $app.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with $app.schedulerName }}
      schedulerName: {{ . }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      {{- if eq (include "victoria-metrics.storage.hasInitContainer" . ) "true" }}
      initContainers: {{ include "victoria-metrics.storage.initContiners" . | nindent 8 }}
      {{- end }}
      {{- with ($app.imagePullSecrets | default .Values.global.imagePullSecrets) }}
      imagePullSecrets: {{ . }}
      {{- end }}
      containers:
        - name: vmstorage
          image: {{ include "vm.image" (merge (deepCopy $global) (dict "app" $app)) }}
          imagePullPolicy: {{ $app.image.pullPolicy }}
          {{- with $app.containerWorkingDir }}
          workingDir: {{ . }}
          {{- end }}
          {{- if $app.securityContext.enabled }}
          securityContext: {{ include "common.compatibility.renderSecurityContext" (dict "secContext" $app.securityContext "context" .) | nindent 12 }}
          {{- end }}
          args:
            - --retentionPeriod={{ toString $app.retentionPeriod }}
            - --storageDataPath={{ $app.persistentVolume.mountPath }}
            {{- range $key, $value := $app.extraArgs }}
            {{- if kindIs "slice" $value }}
            {{- range $v := $value }}
            - --{{ $key }}={{ $v }}
            {{- end }}
            {{- else }}
            - --{{ $key }}={{ $value }}
            {{- end }}
            {{- end }}
            {{- with (include "chart.license.flag" .) }}
            - {{ . }}
            {{- end }}
          ports:
            - name: {{ $app.ports.name | default "http" }}
              containerPort: {{ include "vm.port.from.flag" (dict "flag" $app.extraArgs.httpListenAddr "default" "8482") }}
            - name: vminsert
              containerPort: 8400
            - name: vmselect
              containerPort: 8401
          {{- with $app.envFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.env }}
          env: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "readiness"))) }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "liveness"))) }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "startup"))) }}
          startupProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.resource }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- with $app.persistentVolume }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
            {{- end }}
            {{- range $app.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- range $app.extraConfigmapMounts }}
            - name: {{ $app.name }}-{{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- range $app.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- with $app.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- include "chart.license.mount" . | nindent 12 }}
        {{- if $app.vmbackupmanager.enable }}
        {{- $manager := $app.vmbackupmanager -}}
        - name: vmbackupmanager
          image: {{ include "vm.image" (merge (deepCopy $global) (dict "app" $manager)) }}
          imagePullPolicy: {{ $app.image.pullPolicy }}
          {{- if $app.securityContext.enabled }}
          securityContext: {{ include "common.compatibility.renderSecurityContext" (dict "secContext" $app.securityContext "context" .) | nindent 12 }}
          {{- end }}
          args:
            - --eula={{ $manager.eula }}
            - --disableHourly={{ $manager.disableHourly }}
            - --disableDaily={{ $manager.disableDaily }}
            - --disableWeekly={{ $manager.disableWeekly }}
            - --disableMonthly={{ $manager.disableMonthly }}
            - --keepLastHourly={{ $manager.retention.keepLastHourly }}
            - --keepLastDaily={{ $manager.retention.keepLastDaily }}
            - --keepLastWeekly={{ $manager.retention.keepLastWeekly }}
            - --keepLastMonthly={{ $manager.retention.keepLastMonthly }}
            - --storageDataPath={{ $app.persistentVolume.mountPath }}
            - --dst={{ $manager.destination }}/$(POD_NAME)
            - --snapshot.createURL=http://localhost:8482/snapshot/create
            - --snapshot.deleteURL=http://localhost:8482/snapshot/delete
            {{- range $key, $value := $manager.extraArgs }}
            - --{{ $key }}={{ $value }}
            {{- end }}
            {{- with (include "chart.license.flag" .) }}
            - {{ . }}
            {{- end }}
          {{- with $manager.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $manager "type" "readiness"))) }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $manager "type" "liveness"))) }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $manager "type" "startup"))) }}
          startupProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- with $manager.env }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: manager-http
              containerPort: 8300
          volumeMounts:
            {{- with $app.persistentVolume }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
            {{- end }}
            {{- range $manager.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- include "chart.license.mount" . | nindent 12 }}
        {{- end }}
        {{- with $app.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $app.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if $app.podSecurityContext.enabled }}
      securityContext: {{ include "common.compatibility.renderSecurityContext" (dict "secContext" $app.podSecurityContext "context" .) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "victoria-metrics.serviceAccountName" . }}
      {{- with $app.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.topologySpreadConstraints }}
      topologySpreadConstraints: {{ toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ $app.terminationGracePeriodSeconds }}
      {{- if or $app.extraVolumes (not $app.persistentVolume.enabled) $app.persistentVolume.existingClaim (include "chart.license.volume" .) }}
      volumes:
        {{- with $app.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if not $app.persistentVolume.enabled }}
        - name: vmstorage-volume
          emptyDir: {{ toYaml $app.emptyDir | nindent 12 }}
        {{- else }}
        {{- if $app.persistentVolume.existingClaim }}
        - name: vmstorage-volume
          persistentVolumeClaim:
            claimName: {{ $app.persistentVolume.existingClaim }}
        {{- end }}
        {{- end }}
        {{- include "chart.license.volume" . | nindent 8 }}
      {{- end }}
  {{- if and $app.persistentVolume.enabled (not $app.persistentVolume.existingClaim) }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: {{ $app.persistentVolume.name }}
        {{- with $app.persistentVolume.annotations }}
        annotations: {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- with $app.persistentVolume.labels }}
        labels: {{ toYaml . | nindent 10 }}
        {{- end }}
      spec:
        {{- with $app.persistentVolume.accessModes }}
        accessModes: {{ toYaml . | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: {{ $app.persistentVolume.size }}
        {{- with $app.persistentVolume.storageClass }}
        storageClassName: {{ ternary "" . (eq "-" .) }}
        {{- end }}
  {{- end }}
{{- end }}

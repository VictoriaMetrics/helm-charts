{{- $global := (dict "Values" (deepCopy .Values) "Release" (deepCopy .Release) "Chart" (deepCopy .Chart) "Template" (deepCopy .Template)) -}}
{{- $app := .Values.vmselect -}}
{{- $fullname := (include "victoria-metrics.vmselect.fullname" .) }}
{{- if and $app.enabled (not $app.statefulSet.enabled) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with $app.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
  {{- $ctx := mergeOverwrite (deepCopy $global) (dict "extraLabels" $app.extraLabels) }}
  labels: {{ include "victoria-metrics.vmselect.labels" $ctx | nindent 4 }}
  name: {{ $fullname }}
  namespace: {{ include "vm.namespace" . }}
spec:
  selector:
    matchLabels: {{ include "victoria-metrics.vmselect.matchLabels" . | nindent 6 }}
  {{- if not $app.horizontalPodAutoscaler.enabled }}
  replicas: {{ $app.replicaCount }}
  {{- end }}
  {{- with $app.strategy }}
  strategy: {{ toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with $app.podAnnotations }}
      annotations: {{ toYaml . | nindent 8 }}
      {{- end }}
      labels: {{ include "victoria-metrics.vmselect.podLabels" $ctx | nindent 8 }}
    spec:
      {{- with $ctx.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      {{- with $app.initContainers }}
      initContainers: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with ($app.imagePullSecrets | default .Values.global.imagePullSecrets) }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: vmselect
          image: {{ include "vm.image" (merge (deepCopy $global) (dict "app" $app)) }}
          imagePullPolicy: {{ $app.image.pullPolicy }}
          {{- with $app.containerWorkingDir }}
          workingDir: {{ . }}
          {{- end }}
          {{- if $app.securityContext.enabled }}
          securityContext: {{ include "vm.compatibility.renderSecurityContext" (dict "secContext" $app.securityContext "context" .) | nindent 12 }}
          {{- end }}
          args: {{ include "vmselect.args" . | nindent 12 }}
          {{- with $app.envFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.env }}
          env: {{ toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: {{ $app.ports.name | default "http" }}
              containerPort: {{ include "vm.port.from.flag" (dict "flag" $app.extraArgs.httpListenAddr "default" "8481") }}
            {{- with $app.extraArgs.clusternativeListenAddr }}
            - name: cluster-tcp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "readiness"))) }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "liveness"))) }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "startup"))) }}
          startupProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: {{ $app.cacheMountPath }}
              name: cache-volume
            {{- range $app.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- with $app.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- include "vm.license.mount" . | nindent 12 }}
          {{- with $app.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
        {{- with $app.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $app.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if $app.podSecurityContext.enabled }}
      securityContext: {{ include "vm.compatibility.renderSecurityContext" (dict "secContext" $app.podSecurityContext "context" .) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "victoria-metrics.serviceAccountName" . }}
      {{- with $app.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.topologySpreadConstraints }}
      topologySpreadConstraints: {{ toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- with $app.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: cache-volume
          {{- if $app.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ $app.persistentVolume.existingClaim | default $fullname }}
          {{- else }}
          emptyDir: {{ toYaml $app.emptyDir | nindent 12 }}
          {{- end }}
        {{- include "vm.license.volume" . | nindent 8 }}
{{- end }}

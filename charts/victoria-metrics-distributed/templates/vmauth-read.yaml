{{- if .Values.read.global.vmauth.enabled }}
{{- $fullname := include "vm.fullname" . }}
{{- $ctx := dict "helm" . "appKey" (list "read" "global" "vmauth") "fullname" $fullname }}
{{- $ns := include "vm.namespace" $ctx }}
---
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMAuth
metadata:
  name: {{ include "vm.cr.fullname" $ctx }}
  namespace: {{ $ns }}
  labels: {{ include "vm.labels" $ | nindent 4 }}
  {{- with .Values.read.global.vmauth.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end  }}
{{- $spec := mergeOverwrite (deepCopy .Values.common.vmauth.spec) (deepCopy .Values.read.global.vmauth.spec) }}
spec:
  {{- with (omit $spec "unauthorizedAccessConfig") }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
  unauthorizedAccessConfig:
  - src_paths:
    - "/select/.+"
    load_balancing_policy: first_available
    {{- $_ := set $ctx "style" "managed" }}
    {{- $urls := default list }}
    {{- range $i, $z := $.Values.availabilityZones }}
      {{- $zone := mergeOverwrite (deepCopy $.Values.zoneTpl) $z }}
      {{- if (($zone.read).crossZone).vmauth }}
        {{- $urlSpec := $zone.read.crossZone.vmauth.spec | default dict }}
        {{- $_ := set $zone.read.crossZone.vmauth "spec" (mergeOverwrite (deepCopy $.Values.common.vmauth.spec) $urlSpec) }}
      {{- end }}
      {{- $_ := set $ctx "appKey" (list "zone" "read" "crossZone" "vmauth" "spec") }}
      {{- $_ := set $ctx "zone" $zone }}
      {{- $urls = append $urls (include "vm.url" $ctx) }}
    {{- end }}
    {{- $_ := unset $ctx "style" }}
    {{- if empty $urls }}
      {{- fail "No global vmauth read backend urls defined" -}}
    {{- end }}
    url_prefix: {{ toYaml $urls | nindent 4 }}
{{- end }}


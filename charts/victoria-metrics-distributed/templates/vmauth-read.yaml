{{- $ctx := dict "helm" . }}
{{- $urlCtx := dict "helm" . }}
{{- $fullname := include "vm.fullname" . }}
{{- if ((((.Values).read).global).vmauth).enabled }}
  {{- $commonAuth := dict "spec" ((((.Values).common).vmauth).spec | default dict) }}
  {{- $auth := .Values.read.global.vmauth | default dict }}
  {{- $auth = mergeOverwrite (deepCopy $commonAuth) (deepCopy $auth) }}
  {{- $_ := set $ctx "appKey" (list "vmauth" "spec") }}
  {{- $_ := set $ctx "fullname" $fullname }}
  {{- $_ := set $ctx "vmauth" $auth }}
---
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMAuth
metadata:
  name: {{ include "vm.cr.fullname" $ctx }}
  namespace: {{ include "vm.namespace" $ctx }}
  labels: {{ include "vm.labels" $ctx | nindent 4 }}
  {{- with .Values.read.global.vmauth.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end  }}

  {{- $_ := set $urlCtx "style" "managed" }}
  {{- $urls := default list }}
  {{- range $i, $z := $.Values.availabilityZones }}
    {{- $zone := mergeOverwrite (deepCopy $.Values.zoneTpl) $z }}
    {{- if $zone.read.vmauth.enabled -}}
      {{- $urlSpec := (($zone.read).vmauth).spec | default dict }}
      {{- $_ := set $zone.read.vmauth "spec" (mergeOverwrite (deepCopy $commonAuth.spec) $urlSpec) }}
      {{- $_ := set $urlCtx "zone" $zone }}
      {{- $_ := set $urlCtx "appKey" (list "zone" "read" "vmauth" "spec") }}
      {{- $urls = append $urls (include "vm.url" $urlCtx) }}
    {{- else if $zone.vmcluster.enabled -}}
      {{- $urlSpec := mergeOverwrite (deepCopy ((((.Values).common).vmcluster).spec | default dict)) (deepCopy ($zone.vmcluster).spec | default dict) }}
      {{- $_ := set $zone.vmcluster "spec" $urlSpec }}
      {{- $_ := set $urlCtx "zone" $zone }}
      {{- $_ := set $urlCtx "appKey" (list "zone" "vmcluster" "spec" "vmselect") }}
      {{- $urls = append $urls (include "vm.url" $urlCtx) }}
    {{- else if $zone.vmsingle.enabled -}}
      {{- $urlSpec := mergeOverwrite (deepCopy ((((.Values).common).vmsingle).spec | default dict)) (deepCopy ($zone.vmsingle).spec | default dict) }}
      {{- $_ := set $zone.vmsingle "spec" $urlSpec }}
      {{- $_ := set $urlCtx "zone" $zone }}
      {{- $_ := set $urlCtx "appKey" (list "zone" "vmsingle") }}
      {{- $urls = append $urls (include "vm.url" $urlCtx) }}
    {{- end -}}
  {{- end }}
  {{- $_ := unset $urlCtx "style" }}
  {{- if empty $urls }}
    {{- fail "No global vmauth read backend urls defined" -}}
  {{- end }}
  {{- $defaultUrlMapItem := dict "src_paths" (list "/select/.+") "url_prefix" $urls }}
  {{- $spec := deepCopy $auth.spec | default dict -}}
  {{- $accessSpec := $spec.unauthorizedUserAccessSpec | default dict }}
  {{- $urlMap := $accessSpec.url_map | default (list (default dict))  }}
  {{- $firstUrlMapItem := mergeOverwrite (index $urlMap 0) $defaultUrlMapItem }}
  {{- $_ := set $accessSpec "url_map" (prepend (slice $urlMap 1) $firstUrlMapItem) }}
  {{- $_ := set $spec "unauthorizedUserAccessSpec" $accessSpec }}
spec: {{ tpl (toYaml $spec) $ctx | nindent 2 }}
{{- end }}


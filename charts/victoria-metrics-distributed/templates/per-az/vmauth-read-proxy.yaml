{{- $ns := include "vm.namespace" . }}
{{- $ctx := dict "helm" . }}
{{- range $i, $z := .Values.availabilityZones }}
{{- $zone := mergeOverwrite (deepCopy $.Values.zoneTpl) $z }}
{{- if and $zone.read.crossZone.vmauth.enabled $zone.read.perZone.vmauth.enabled }}
---
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMAuth
metadata:
  {{- $_ := set $ctx "appKey" (list "zone" "read" "crossZone" "vmauth") }}
  {{- if (($zone.read).perZone).vmauth }}
    {{- $urlSpec := $zone.read.perZone.vmauth.spec | default dict }}
    {{- $_ := set $zone.read.perZone.vmauth "spec" (mergeOverwrite (deepCopy $.Values.common.vmauth.spec) $urlSpec) }}
  {{- end }}
  {{- $_ := set $ctx "zone" $zone }}
  name: {{ include "vm.cr.fullname" $ctx }}
  namespace: {{ $ns }}
  labels: {{ include "vm.labels" $ctx | nindent 4 }}
  {{- with $zone.read.crossZone.vmauth.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
{{- $spec := mergeOverwrite (deepCopy $.Values.common.vmauth.spec) (deepCopy (($zone.common).spec)) (deepCopy (((($zone.read).crossZone).vmauth).spec)) }}
spec: {{ tpl (toYaml (omit $spec "unauthorizedAccessConfig")) $ctx | nindent 2 }}
  unauthorizedAccessConfig:
  - src_paths:
    - "/select/.+"
    load_balancing_policy: first_available
    retry_status_codes:
    - 503
    {{- $_ := set $ctx "style" "managed" }}
    {{- $urls := default list }}
    {{- if $zone.read.allow }}
      {{- $_ := set $ctx "appKey" (list "zone" "read" "perZone" "vmauth" "spec") }}
      {{- $urls = append $urls (include "vm.url" $ctx) }}
    {{- end }}
    {{- range $j, $c := $.Values.availabilityZones }}
      {{- $cross := mergeOverwrite (deepCopy $.Values.zoneTpl) $c }}
      {{- if and (ne $j $i) $cross.read.allow }}
        {{- $_ := set $ctx "appKey" (list "zone" "read" "perZone" "vmauth" "spec") }}
        {{- if (($cross.read).perZone).vmauth }}
          {{- $urlSpec := $cross.read.perZone.vmauth.spec | default dict }}
          {{- $_ := set $cross.read.perZone.vmauth "spec" (mergeOverwrite (deepCopy $.Values.common.vmauth.spec) $urlSpec) }}
        {{- end }}
        {{- $_ := set $ctx "zone" $cross }}
        {{- $urls = append $urls (include "vm.url" $ctx)}}
      {{- end }}
    {{- end }}
    {{- if empty $urls }}
      {{- fail (printf "No read backend urls defined for vmauth in AZ %s" $zone.name) -}}
    {{- end }}
    url_prefix: {{ toYaml $urls | nindent 4 }}
    {{- $_ := unset $ctx "style" }}
{{- end }}
{{- end }}

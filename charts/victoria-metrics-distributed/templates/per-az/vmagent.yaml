{{- $ctx := dict "helm" . }}
{{- $isMultitenant := .Values.enableMultitenancy }}
{{- $tenant := ternary "multitenant" "0" $isMultitenant }}
{{- range $i, $az := .Values.availabilityZones }}
  {{- $zone := mergeOverwrite (deepCopy $.Values.zoneTpl) $az }}
  {{- if $zone.vmagent.enabled }}
    {{- if (($zone.vmagent).spec).remoteWrite }}
      {{- fail "Error: distributed vmagent doesn't support customized remoteWrite address" }}
    {{- end }}
    {{- $vmagent := deepCopy $zone.vmagent }}
    {{- $_ := set $vmagent "spec" (mergeOverwrite (deepCopy $.Values.common.vmagent.spec) (deepCopy ($zone.common).spec) (deepCopy ($vmagent.spec))) }}
    {{- $_ := set $zone "vmagent" $vmagent }}
    {{- $_ := set $ctx "appKey" (list "zone" "vmagent" "spec") }}
    {{- $_ := set $ctx "zone" $zone }}
---
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMAgent
metadata:
  labels: {{ include "vm.labels" $ctx | nindent 4 }}
  {{- with $zone.vmagent.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end  }}
  name: {{ include "vm.cr.fullname" $ctx }}
  namespace: {{ include "vm.namespace" $ }}
{{- $remoteWrites := default list }}
{{- range $rwz := $.Values.availabilityZones }}
  {{- $rwZone := mergeOverwrite (deepCopy $.Values.zoneTpl) $rwz }}
  {{- if and $rwZone.write.allow $rwZone.write.vmauth.enabled }}
    {{- if ($rwZone.write).vmauth }}
      {{- $urlSpec := $rwZone.write.vmauth.spec | default dict }}
      {{- $_ := set $rwZone.write.vmauth "spec" (mergeOverwrite (deepCopy $.Values.common.vmauth.spec) $urlSpec) }}
    {{- end }}
    {{- $_ := set $ctx "style" "managed" }}
    {{- $_ := set $ctx "zone" $rwZone }}
    {{- if ($rwZone.vmcluster).enabled -}}
      {{- $_ := set $ctx "appKey" (list "zone" "write" "vmauth" "spec") }}
      {{- $remoteWrite := printf "%s/insert/%s/prometheus/api/v1/write" (include "vm.url" $ctx) $tenant -}}
      {{- $remoteWrites = append $remoteWrites (dict "url" $remoteWrite) -}}
    {{- else if ($rwZone.vmsingle).enabled -}}
      {{- $_ := set $rwZone.vmsingle "spec" (mergeOverwrite (deepCopy $.Values.common.vmsingle.spec) (deepCopy ($rwZone.common).spec) (deepCopy ($rwZone.vmsingle.spec))) -}}
      {{- $_ := set $ctx "appKey" (list "zone" "vmsingle" "spec") }}
      {{- $replicas := (($rwZone.vmsingle).spec).replicaCount | default 1 }}
      {{- range $id := until (int $replicas) -}}
        {{- $_ := set $ctx "appIdx" $id -}}
        {{- $remoteWrite := printf "%s/prometheus/api/v1/write" (include "vm.url" $ctx) -}}
        {{- $remoteWrites = append $remoteWrites (dict "url" $remoteWrite) -}}
      {{- end -}}
    {{- else -}}
      {{- fail (printf "Either enable VMCluster or VMSingle or disable write VMAuth balancer in %q zone" $az.name) -}}
    {{- end -}}
    {{- $_ := unset $ctx "style" }}
  {{- end }}
{{- end }}
{{- $rw := concat $remoteWrites ($zone.vmagent.spec.remoteWrites | default list) -}}
{{- if eq (len $rw) 0 -}}
  {{- fail (printf "VMAgent in %q zone has no remote writes. Please disable it" $zone.name) }}
{{- end -}}
{{- $_ := set $zone.vmagent.spec "remoteWrite" $rw }}
{{- if $isMultitenant }}
  {{- $remoteWriteSettings := (dict "useMultiTenantMode" true) }}
  {{- $_ := set $zone.vmagent.spec "remoteWriteSettings" (mergeOverwrite (deepCopy ($zone.vmagent.spec.remoteWriteSettings | default dict)) $remoteWriteSettings) }}
{{- end }}
spec: {{ tpl (toYaml $zone.vmagent.spec) $ctx | nindent 2 }}
{{- end }}
{{- end }}

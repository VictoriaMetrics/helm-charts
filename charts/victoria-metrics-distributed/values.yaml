# -- overrides the chart's name
nameOverride: "vm-distributed"

# -- overrides the chart's computed fullname.
fullnameOverride: ""

# -- set up a vmauth as the global write entrypoint
vmauthIngestGlobal:
  enabled: true
  name: ""
  spec: {}

# -- set up a vmauth as the global read entrypoint
vmauthQueryGlobal:
  enabled: true
  name: ""
  spec: {}

# -- config per availability zone components, including vmagent, vmcluster, vmauth etc
availabilityZones:
  - name: zone-eu-1
    # -- allow data ingestion to this zone
    allowIngest: true
    # -- allow data query from this zone through global query endpoint
    allowQuery: true
    # -- nodeselector to restrict where pods of this zone can be placed.
    # usually provided by cloud providers.
    nodeSelector:
      topology.kubernetes.io/zone: zone-eu-1
    # -- extraAffinity adds user defined custom affinity rules
    extraAffinity: {}
    # -- topologySpreadConstraints allows to customize the default topologySpreadConstraints.
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
    vmauthIngest:
      enabled: true
      # -- override the name of the vmauth object
      name: ""
      spec:
        image:
          tag: v1.100.0
        extraArgs:
          # -- start from v1.100.0, vmauth can discover backend IPs via periodic DNS,
          # which can help performing load balancing between vminsert instances
          discoverBackendIPs: "true"
    vmauthQueryPerZone:
      enabled: true
      name: ""
      spec: {}
    # -- set up a vmauth with all the zone with `allowQuery: true` as query backends
    vmauthCrossAZQuery:
      enabled: true
      name: ""
      spec: {}
    # -- vmagent here only meant to proxy write requests to each az,
    # doesn't support customized other remote write address.
    vmagent:
      enabled: true
      name: ""
      annotations: {}
      spec: {}
    vmcluster:
      enabled: true
      name: ""
      # -- spec for VMCluster crd, see https://docs.victoriametrics.com/operator/api.html#vmclusterspec
      spec:
        retentionPeriod: "14"
        replicationFactor: 2
        vmstorage:
          replicaCount: 2
          storageDataPath: "/vm-data"
          resources: {}
        vmselect:
          replicaCount: 2
          extraArgs: {}
          resources:
            {}
        vminsert:
          replicaCount: 2
          extraArgs: {}
          resources:
            {}
    
  - name: zone-us-1
    # -- allow data ingestion to this zone
    allowIngest: true
    # -- allow data query from this zone through global query endpoint
    allowQuery: true
    # -- nodeselector to restrict where pods of this zone can be placed.
    # usually provided by cloud providers.
    nodeSelector:
      topology.kubernetes.io/zone: zone-us-1
    # -- extraAffinity adds user defined custom affinity rules
    extraAffinity: {}
    # -- topologySpreadConstraints allows to customize the default topologySpreadConstraints.
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
    vmauthIngest:
      enabled: true
      name: ""
      spec:
        image:
          tag: v1.100.0
        extraArgs:
          # -- start from v1.100.0, vmauth can discover backend IPs via periodic DNS,
          # which can help performing load balancing between vminsert instances
          discoverBackendIPs: "true"
    vmauthQueryPerZone:
      enabled: true
      name: ""
      spec: {}
    vmauthCrossAZQuery:
      enabled: true
      name: ""
      spec: {}
    # -- vmagent only meant to proxy write requests to each az,
    # doesn't support customized remote write address
    vmagent:
      enabled: true
      name: ""
      annotations: {}
      spec: {}
    vmcluster:
      enabled: true
      name: ""
      # -- spec for VMCluster crd, see https://docs.victoriametrics.com/operator/api.html#vmclusterspec
      spec:
        retentionPeriod: "14"
        replicationFactor: 2
        vmstorage:
          replicaCount: 2
          storageDataPath: "/vm-data"
          resources: {}
        vmselect:
          replicaCount: 2
          extraArgs: {}
          resources:
            {}
        vminsert:
          replicaCount: 2
          extraArgs: {}
          resources:
            {}

  ## add more zones if needed
  # - name: zone-na-1
  #   # -- allow data ingestion to this zone
  #   allowIngest: true
  #   # -- allow data query from this zone through global query endpoint
  #   allowQuery: true
  #   # -- nodeselector to restrict where pods of this zone can be placed.
  #   # usually provided by cloud providers.
  #   nodeSelector:
  #     topology.kubernetes.io/zone: zone-na-1
  #   # -- extraAffinity adds user defined custom affinity rules
  #   extraAffinity: {}
  #   # -- topologySpreadConstraints allows to customize the default topologySpreadConstraints.
  #   topologySpreadConstraints:
  #     - maxSkew: 1
  #       topologyKey: kubernetes.io/hostname
  #       whenUnsatisfiable: ScheduleAnyway
  #   vmauthIngest:
  #     enabled: true
  #     # -- override the name of the vmauth object
  #     name: ""
  #     spec:
  #       image:
  #         tag: v1.100.0
  #       extraArgs:
  #         # -- start from v1.100.0, vmauth can discover backend IPs via periodic DNS,
  #         # which can help performing load balancing between vminsert instances
  #         discoverBackendIPs: "true"
  #   vmauthQueryPerZone:
  #     enabled: true
  #     name: ""
  #     spec: {}
  #   # -- set up a vmauth with all the zone with `allowQuery: true` as query backends
  #   vmauthCrossAZQuery:
  #     enabled: true
  #     name: ""
  #     spec: {}
  #   # -- vmagent here only meant to proxy write requests to each az,
  #   # doesn't support customized remote write address
  #   vmagent:
  #     enabled: true
  #     name: ""
  #     annotations: {}
  #     spec: {}
  #   vmcluster:
  #     enabled: true
  #     name: ""
  #     # -- spec for VMCluster crd, see https://docs.victoriametrics.com/operator/api.html#vmclusterspec
  #     spec: {}


# -- set up an extra vmagent to scrape all the scrape objects by default,
# and write data to above vmauth-global-ingest endpoint.
extraVMAgent:
  enabled: true
  spec:
    selectAllByDefault: true

# -- set up vm operator and other resources like vmalert, grafana if needed
victoria-metrics-k8s-stack:
  enabled: true
  victoria-metrics-operator:
    enabled: true
  vmagent:
    enabled: false
  vmsingle:
    enabled: false
  vmcluster:
    enabled: false
  alertmanager:
    enabled: false
  vmalert:
    enabled: false
  grafana:
    enabled: true 
    sidecar:
      datasources:
        enabled: true
  crds:
    enabled: true

{{- $global := (dict "Values" (deepCopy .Values) "Release" (deepCopy .Release) "Chart" (deepCopy .Chart) "Template" (deepCopy .Template)) -}}
{{- $app := .Values.alertmanager }}
{{- $fullname := (include "vmalert.alertmanager.fullname" .) }}
{{- if $app.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}
  namespace: {{ include "vm.namespace" . }}
  labels: {{ include "vmalert.alertmanager.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{ include "vmalert.alertmanager.matchLabels" . | nindent 6 }}
  {{- if $app.persistentVolume.enabled }}
  strategy:
    # Must be "Recreate" when we have a persistent volume
    type: Recreate
  {{- end }}
  template:
    metadata:
      {{- $ctx := merge (deepCopy .) (dict "extraLabels" $app.podMetadata.labels) }}
      labels: {{ include "vmalert.alertmanager.labels" $ctx | nindent 8 }}
      {{- $annotations := dict "checksum/config" (include (print .Template.BasePath "/alertmanager-configmap.yaml") . | sha256sum) }}
      {{- $annotations = merge $annotations (deepCopy $app.podMetadata.annotations) }}
      annotations: {{ toYaml $annotations | nindent 8 }}
    spec:
      serviceAccountName: {{ include "vmalert.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      {{- if $app.podSecurityContext.enabled }}
      securityContext: {{ include "vm.securityContext" (dict "securityContext" $app.podSecurityContext "helm" .) | nindent 8 }}
      {{- end }}
      {{- with ($app.imagePullSecrets | default .Values.global.imagePullSecrets) }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.initContainers }}
      initContainers: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: alertmanager
          {{- if $app.securityContext.enabled }}
          securityContext: {{ include "vm.securityContext" (dict "securityContext" $app.securityContext "helm" .) | nindent 12 }}
          {{- end }}
          image: {{ include "vm.image" (merge (deepCopy $global) (dict "app" $app)) }}
          args: {{ include "alertmanager.args" . | nindent 12 }}
          ports:
            - name: web
              containerPort: {{ include "vm.port.from.flag" (dict "flag" $app.listenAddress "default" "9093") }}
          {{- with $app.envFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "readiness"))) }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "liveness"))) }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "startup"))) }}
          startupProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: storage
              mountPath: {{ ternary $app.persistentVolume.mountPath "/data" $app.persistentVolume.enabled }}
            - name: config
              mountPath: /config
              readOnly: true
            {{- range $app.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- with $app.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with $app.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
        {{- with $app.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $app.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if $app.priorityClassName }}
      priorityClassName: {{ $app.priorityClassName | quote }}
      {{- end }}
      {{- with $app.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{ end }}
      volumes:
        - name: storage
          {{- if $app.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ $app.persistentVolume.existingClaim | default $fullname }}
          {{- else }}
          emptyDir: {{ toYaml $app.emptyDir | nindent 12 }}
          {{- end }}
        - name: config
          configMap:
            name: {{ include "vmalert.alertmanager.configname" . }}
        {{- range $app.extraHostPathMounts }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
        {{- end }}
        {{- with $app.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end -}}

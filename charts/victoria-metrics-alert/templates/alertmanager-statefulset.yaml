{{- $app := .Values.alertmanager }}
{{- if and $app.enabled $app.cluster.enabled (gt ($app.replicaCount | default 1 | int) 1) -}}
{{- $ctx := dict "helm" . "appKey" "alertmanager" }}
{{- $fullname := include "vm.plain.fullname" $ctx }}
{{- $ns := include "vm.namespace" $ctx }}
{{- $sa := include "vm.fullname" . }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullname }}
  namespace: {{ $ns }}
  labels: {{ include "vm.labels" $ctx | nindent 4 }}
spec:
  serviceName: {{ $fullname }}-headless
  replicas: {{ $app.replicaCount | default 1 }}
  selector:
    matchLabels: {{ include "vm.selectorLabels" $ctx | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      {{- $_ := set $ctx "extraLabels" $app.podLabels }}
      labels: {{ include "vm.podLabels" $ctx | nindent 8 }}
      {{- $_ := unset $ctx "extraLabels" }}
      {{- $annotations := dict "checksum/config" (include (print .Template.BasePath "/alertmanager-configmap.yaml") . | sha256sum) }}
      {{- $annotations = merge $annotations (deepCopy $app.podAnnotations) }}
      annotations: {{ toYaml $annotations | nindent 8 }}
    spec:
      {{- if or (.Values.serviceAccount).name (.Values.serviceAccount).create }}
      serviceAccountName: {{ (.Values.serviceAccount).name | default $sa }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      {{- end }}
      {{- if $app.podSecurityContext.enabled }}
      securityContext: {{ include "vm.securityContext" (dict "securityContext" $app.podSecurityContext "helm" .) | nindent 8 }}
      {{- end }}
      {{- with ($app.imagePullSecrets | default .Values.global.imagePullSecrets) }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.initContainers }}
      initContainers: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: alertmanager
          {{- if $app.securityContext.enabled }}
          securityContext: {{ include "vm.securityContext" (dict "securityContext" $app.securityContext "helm" .) | nindent 12 }}
          {{- end }}
          image: {{ include "vm.image" $ctx }}
          args: {{ include "alertmanager.args" $ctx | nindent 12 }}
          ports:
            - name: web
              containerPort: {{ include "vm.port.from.flag" (dict "flag" $app.listenAddress "default" "9093") }}
            - name: cluster
              containerPort: {{ include "vm.port.from.flag" (dict "flag" $app.cluster.listenAddress "default" "9094") }}
          {{- with $app.envFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "readiness"))) }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "liveness"))) }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "startup"))) }}
          startupProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: storage
              mountPath: {{ ternary $app.persistentVolume.mountPath "/data" $app.persistentVolume.enabled }}
            - name: config
              mountPath: /config
              readOnly: true
            {{- range $app.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- with $app.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with $app.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
        {{- with $app.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $app.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if $app.priorityClassName }}
      priorityClassName: {{ $app.priorityClassName | quote }}
      {{- end }}
      {{- with $app.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- range $constraint := . }}
        - {{ toYaml $constraint | nindent 10 | trim }}
          {{- if not $constraint.labelSelector }}
          labelSelector:
            matchLabels: {{ include "vm.selectorLabels" $ctx | nindent 14 }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- with $app.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{ end }}
      volumes:
        {{- if not $app.persistentVolume.enabled }}
        - name: storage
          emptyDir: {{ toYaml $app.emptyDir | nindent 12 }}
        {{- end }}
        {{- $_ := set $ctx "appKey" "alertmanager" }}
        - name: config
          configMap:
            name: {{ include "alertmanager.config.name" $ctx }}
        {{- range $app.extraHostPathMounts }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
        {{- end }}
        {{- with $app.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
  {{- if $app.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage
        {{- with $app.persistentVolume.annotations }}
        annotations: {{ toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes: {{ toYaml $app.persistentVolume.accessModes | nindent 10 }}
        {{- with $app.persistentVolume.storageClassName }}
        storageClassName: {{ . }}
        {{- end }}
        resources:
          requests:
            storage: {{ $app.persistentVolume.size }}
  {{- end }}
{{- end -}}

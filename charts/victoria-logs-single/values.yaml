# Default values for victoria-logs.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  # -- Image pull secrets, that can be shared across multiple helm charts
  imagePullSecrets: []
  image:
    # -- Image registry, that can be shared across multiple helm charts
    registry: ""
  # -- Openshift security context compatibility configuration
  compatibility:
    openshift:
      adaptSecurityContext: "auto"
  # -- Global name override
  nameOverride: ""
  cluster:
    # -- K8s cluster domain suffix, uses for building storage pods' FQDN. Details are [here](https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/)
    dnsDomain: cluster.local.
# -- Print chart notes
printNotes: true

# -- See `kubectl explain poddisruptionbudget.spec` for more. Details are [here](https://kubernetes.io/docs/tasks/run-application/configure-pdb/)
podDisruptionBudget:
  enabled: false
  #  minAvailable: 1
  #  maxUnavailable: 1
  # -- PodDisruptionBudget extra labels
  extraLabels: {}

server:
  # -- Enable deployment of server component. Deployed as StatefulSet
  enabled: true
  image:
    # -- Image registry
    registry: ""
    # -- Image repository
    repository: victoriametrics/victoria-logs
    # -- Image tag
    tag: ""
    # -- Image tag suffix, which is appended to `Chart.AppVersion` if no `server.image.tag` is defined
    variant: victorialogs
    # -- Image pull policy
    pullPolicy: IfNotPresent
  # -- Image pull secrets
  imagePullSecrets: []
  # -- Replica count
  replicaCount: 1
  # -- Name of Priority Class
  priorityClassName: ""
  # -- Data retention period in month
  retentionPeriod: 1
  # -- Extra command line arguments for container of component
  extraArgs:
    envflag.enable: "true"
    envflag.prefix: VM_
    loggerFormat: json

  # -- Additional hostPath mounts
  extraHostPathMounts:
    []
     #- name: certs-dir
     #  mountPath: /etc/kubernetes/certs
     #  subPath: ""
     #  hostPath: /etc/kubernetes/certs
     #  readOnly: true

  # -- Extra Volumes for the pod
  extraVolumes:
    []
    #- name: example
    #  configMap:
    #   name: example

  # -- Extra Volume Mounts for the container
  extraVolumeMounts:
    []
    # - name: example
    #   mountPath: /example

  # -- Extra containers to run in a pod with Victoria Logs container
  extraContainers:
    []
    #- name: config-reloader
    #  image: reloader-image

  # -- Init containers for Victoria Logs Pod
  initContainers:
    []

  # -- Node tolerations for server scheduling to nodes with taints. Details are [here](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/)
  tolerations:
    []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule"

  # -- Pod's node selector. Details are [here](https://kubernetes.io/docs/user-guide/node-selection/)
  nodeSelector: {}

  # -- Pod topologySpreadConstraints
  topologySpreadConstraints: []

  # -- Pod affinity
  affinity: {}

  # -- Additional environment variables (ex.: secret tokens, flags). Details are [here](https://github.com/VictoriaMetrics/VictoriaMetrics#environment-variables)
  env: []

  # -- Specify alternative source for env variables
  envFrom:
    []
    #- configMapRef:
    #    name: special-config

  # -- Container workdir
  containerWorkingDir: ""

  # -- Use an alternate scheduler, e.g. "stork". Check details [here](https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/)
  #
  # schedulerName:

  emptyDir: {}
  persistentVolume:
    # -- Create/use Persistent Volume Claim for server component. Empty dir if false
    enabled: false

    # -- Override Persistent Volume Claim name
    name: ""

    # -- Array of access modes. Must match those of existing PV or dynamic provisioner. Details are [here](http://kubernetes.io/docs/user-guide/persistent-volumes/)
    accessModes:
      - ReadWriteOnce
    # -- Persistant volume annotations
    annotations: {}

    # -- StorageClass to use for persistent volume. Requires server.persistentVolume.enabled: true. If defined, PVC created automatically
    storageClassName: ""

    # -- Existing Claim name. If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    # -- Bind Persistent Volume by labels. Must match all labels of targeted PV.
    matchLabels: {}

    # -- Mount path. Server data Persistent Volume mount root path.
    mountPath: /storage
    # -- Mount subpath
    subPath: ""
    # -- Size of the volume. Should be calculated based on the logs you send and retention policy you set.
    size: 3Gi

  # -- StatefulSet/Deployment additional labels
  extraLabels: {}
  # -- Pod's additional labels
  podLabels: {}
  # -- Pod's annotations
  podAnnotations: {}
  # -- Pod's management policy
  podManagementPolicy: OrderedReady

  # -- Resource object. Details are [here](http://kubernetes.io/docs/user-guide/compute-resources/)
  resources:
    {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 500m
    #   memory: 512Mi

  probe:
    # -- Indicates whether the Container is ready to service requests. If the readiness probe fails, the endpoints controller removes the Pod's IP address from the endpoints of all Services that match the Pod. The default state of readiness before the initial delay is Failure. If a Container does not provide a readiness probe, the default state is Success.
    readiness:
      httpGet: {}
      initialDelaySeconds: 5
      periodSeconds: 15
      timeoutSeconds: 5
      failureThreshold: 3

    # -- Indicates whether the Container is running. If the liveness probe fails, the kubelet kills the Container, and the Container is subjected to its restart policy. If a Container does not provide a liveness probe, the default state is Success.
    liveness:
      tcpSocket: {}
      initialDelaySeconds: 30
      periodSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 10

    # -- Indicates whether the Container is done with potentially costly initialization. If set it is executed first. If it fails Container is restarted. If it succeeds liveness and readiness probes takes over.
    startup: {}
     # tcpSocket: {}
     # failureThreshold: 30
     # periodSeconds: 15
     # successThreshold: 1
     # timeoutSeconds: 5

  # -- Security context to be added to server pods
  securityContext:
    enabled: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true

  # -- Pod's security context. Details are [here](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  podSecurityContext:
    enabled: true
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000

  ingress:
    # -- Enable deployment of ingress for server component
    enabled: false

    # -- Ingress annotations
    annotations:
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    # -- Ingress extra labels
    extraLabels: {}

    # -- Array of host objects
    hosts: []
    #   - name: vmselect.local
    #     path:
    #       - /select
    #       - /insert
    #     port: http

    # -- Array of TLS objects
    tls: []
    #   - secretName: vmselect-ingress-tls
    #     hosts:
    #       - vmselect.local

    # -- Ingress controller class name
    ingressClassName: ""

    # -- Ingress path type
    pathType: Prefix

  service:
    # -- Service annotations
    annotations: {}
    # -- Service labels
    labels: {}
    # -- Service ClusterIP
    clusterIP: ""
    # -- Service external IPs. Details are [here]( https://kubernetes.io/docs/user-guide/services/#external-ips)
    externalIPs: []
    # -- Service load balacner IP
    loadBalancerIP: ""
    # -- Load balancer source range
    loadBalancerSourceRanges: []
    # -- Service port
    servicePort: 9428
    # -- Node port
    # nodePort: 30000
    # -- Service type
    type: ClusterIP
    # -- Service external traffic policy. Check [here](https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip) for details
    externalTrafficPolicy: ""
    # -- Health check node port for a service. Check [here](https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip) for details
    healthCheckNodePort: ""
    # -- Service IP family policy. Check [here](https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services) for details.
    ipFamilyPolicy: ""
    # -- List of service IP families. Check [here](https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services) for details.
    ipFamilies: []

  statefulSet:
    # -- Creates statefulset instead of deployment, useful when you want to keep the cache
    enabled: true
    # -- Deploy order policy for StatefulSet pods
    podManagementPolicy: OrderedReady
  # -- Pod's termination grace period in seconds
  terminationGracePeriodSeconds: 60
  serviceMonitor:
    # -- Enable deployment of Service Monitor for server component. This is Prometheus operator object
    enabled: false
    # -- Service Monitor labels
    extraLabels: {}
    # -- Service Monitor annotations
    annotations: {}
    # -- Basic auth params for Service Monitor
    basicAuth: {}
    # -- Commented. Prometheus scrape interval for server component
#    interval: 15s
    # -- Commented. Prometheus pre-scrape timeout for server component
#    scrapeTimeout: 5s
    # -- Commented. HTTP scheme to use for scraping.
#    scheme: https
    # -- Commented. TLS configuration to use when scraping the endpoint
#    tlsConfig:
#      insecureSkipVerify: true
    # -- Service Monitor relabelings
    relabelings: []
    # -- Service Monitor metricRelabelings
    metricRelabelings: []

config:
  streamFields:
    - stream
    - kubernetes_pod_name
    - kubernetes_container_name
    - kubernetes_namespace_name
  accountID: 0
  projectID: 0
  msgFields:
    - msg
    - _msg
    - message
  timeFields:
    - date

# -- Values for [fluent-bit helm chart](https://fluent.github.io/helm-charts/)
fluent-bit:
  # -- Enable deployment of fluent-bit
  enabled: true
  args:
    - --workdir=/fluent-bit/etc
    - --config=/fluent-bit/etc/conf/fluent-bit.conf
    - --enable-hot-reload

  extraContainers: |
    - name: reloader
      image: {{ include "fluent-bit.image" .Values.hotReload.image }}
      args:
        - {{ printf "-webhook-url=http://localhost:%s/api/v2/reload" (toString .Values.metricsPort) }}
        - -volume-dir=/watch/config
        - -volume-dir=/watch/outputs
      volumeMounts:
        - name: config
          mountPath: /watch/config
        - name: vl-outputs
          mountPath: /watch/outputs

  daemonSetVolumes:
    - name: varlog
      hostPath:
        path: /var/log
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
    - name: vl-outputs
      configMap:
        name: vl-outputs

  daemonSetVolumeMounts:
    - name: varlog
      mountPath: /var/log
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
    - name: vl-outputs
      mountPath: /fluent-bit/etc/conf/vl

  resources: {}

  config:
    # -- Note that Host must be replaced to match your VictoriaLogs service name
    # Default format points to VictoriaLogs service.
    # @notationType -- tpl
    outputs: |
      @INCLUDE /fluent-bit/etc/conf/vl/output_*.conf
    # -- FluentBit configuration filters
    # @notationType -- tpl
    filters: |
      [FILTER]
          Name                kubernetes
          Match               kube.*
          Merge_Log           On
          Keep_Log            On
          K8S-Logging.Parser  On
          K8S-Logging.Exclude On
      [FILTER]
          Name         nest
          Match        *
          Wildcard     pod_name
          Operation    lift
          Nested_under kubernetes
          Add_prefix   kubernetes_
      [FILTER]
          Name          parser
          Match         *
          Parser        json
          Key_Name      log
          Reserve_Data  On
      [FILTER]
          Name   modify
          Match  *
          Rename log msg

# -- Add extra specs dynamically to this chart
extraObjects: []

dashboards:
  # -- Create VictoriaLogs dashboards
  enabled: false
  # -- Dashboard labels
  labels: {}
  #  grafana_dashboard: "1"
  # -- Dashboard annotations
  annotations: {}
  grafanaOperator:
    enabled: false
    spec:
      instanceSelector:
        matchLabels:
          dashboards: "grafana"
      allowCrossNamespaceImport: false

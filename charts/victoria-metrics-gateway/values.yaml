# Default values for victoria-metrics-gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  # -- Image pull secrets, that can be shared across multiple helm charts
  imagePullSecrets: []
  image:
    # -- Image registry, that can be shared across multiple helm charts
    registry: ""
  # -- Openshift security context compatibility configuration
  compatibility:
    openshift:
      adaptSecurityContext: "auto"
  cluster:
    # -- K8s cluster domain suffix, uses for building storage pods' FQDN. Details are [here](https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/)
    dnsDomain: cluster.local.

# -- Number of replicas of vmgateway
replicaCount: 1

image:
  # -- Victoria Metrics gateway Docker registry
  registry: ""
  # -- Victoria Metrics gateway Docker repository and image name
  repository: victoriametrics/vmgateway
  # -- Tag of Docker image
  # override Chart.AppVersion
  tag: ""
  # -- Variant of the image to use.
  # e.g. enterprise, enterprise-scratch
  variant: ""
  # -- Pull policy of Docker image
  pullPolicy: IfNotPresent

# -- Image pull secrets
imagePullSecrets: []
# -- Override chart name
nameOverride: ""
# -- Override resources fullname
fullnameOverride: ""

# -- Container working directory
containerWorkingDir: "/"

 # -- Init containers for vmgateway
initContainers:
  []
  # - name: example
  #   image: example-image

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name:

# -- See `kubectl explain poddisruptionbudget.spec` for more. Check [here](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) for details
podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  # maxUnavailable: 1
  labels: {}

# -- Extra command line arguments for container of component
extraArgs:
  envflag.enable: "true"
  envflag.prefix: VM_
  loggerFormat: json

# -- Additional environment variables (ex.: secret tokens, flags). Check [here](https://github.com/VictoriaMetrics/VictoriaMetrics#environment-variables) for details.
env: []

# -- Specify alternative source for env variables
envFrom: []
  #- configMapRef:
  #    name: special-config

# -- Additional hostPath mounts
extraHostPathMounts: []
  # - name: certs-dir
  #   mountPath: /etc/kubernetes/certs
  #   subPath: ""
  #   hostPath: /etc/kubernetes/certs
  #   readOnly: true

# -- Extra Volumes for the pod
extraVolumes: []
  # - name: example
  #   configMap:
  #     name: example

# -- Extra Volume Mounts for the container
extraVolumeMounts: []
  # - name: example
  #   mountPath: /example

# -- Extra containers to run in a pod with vmgateway
extraContainers: []
  # - name: config-reloader
  #   image: reloader-image

# -- Pod's security context. Details are [here](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
podSecurityContext:
  enabled: true
# fsGroup: 2000

# -- Pod security context. Check [here](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) for details
securityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

service:
  # -- Enabled vmgateway service
  enabled: true
  # -- Service annotations
  annotations: {}
  # -- Service labels
  extraLabels: {}
  # -- Service ClusterIP
  clusterIP: ""
  # -- Service external IPs. Check [here](https://kubernetes.io/docs/user-guide/services/#external-ips) for details
  externalIPs: []
  # -- Service load balacner IP
  loadBalancerIP: ""
  # -- Load balancer source range
  loadBalancerSourceRanges: []
  # -- Service port
  servicePort: 8431
  # nodePort: 30000
  # -- Service type
  type: ClusterIP
  # -- Service external traffic policy. Check [here](https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip) for details
  externalTrafficPolicy: ""
  # -- Health check node port for a service. Check [here](https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip) for details
  healthCheckNodePort: ""
  # -- Service IP family policy. Check [here](https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services) for details.
  ipFamilyPolicy: ""
  # -- List of service IP families. Check [here](https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services) for details.
  ipFamilies: []

ingress:
  # -- Enable deployment of ingress for server component
  enabled: false

  # -- Ingress annotations
  annotations: {}
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: 'true'

  # -- Ingress extra labels
  extraLabels: {}

  # -- Array of host objects
  hosts: []
  #   - name: vmgateway.local
  #     path:
  #       - /
  #     port: http

  # -- Array of TLS objects
  tls: []
  #   - secretName: vmgateway-ingress-tls
  #     hosts:
  #       - vmgateway.local

  # -- Ingress controller class name
  ingressClassName: ""

  # -- Ingress path type
  pathType: Prefix

# -- We usually recommend not to specify default resources and to leave this as a conscious choice for the user. This also increases chances charts run on environments with little resources, such as Minikube. If you do want to specify resources, uncomment the following lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Annotations to be added to the deployment
annotations: {}

# -- Annotations to be added to pod
podAnnotations: {}

# -- Labels to be added to pod
podLabels: {}

# -- Labels to be added to Deployment
extraLabels: {}

# -- NodeSelector configurations. Check [here](https://kubernetes.io/docs/user-guide/node-selection/) for details
nodeSelector: {}

# -- Tolerations configurations. Check [here](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/) for details
tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
#   effect: "NoSchedule|PreferNoSchedule"

# -- Affinity configurations
affinity: {}

serviceMonitor:
  # -- Enable deployment of Service Monitor for server component. This is Prometheus operator object
  enabled: false
  # -- Service Monitor labels
  extraLabels: {}
  # -- Service Monitor annotations
  annotations: {}
  # -- Service Monitor relabelings
  relabelings: []
  # -- Basic auth params for Service Monitor
  basicAuth: {}
  # -- Service Monitor metricRelabelings
  metricRelabelings: []
  #    interval: 15s
  #    scrapeTimeout: 5s
  # -- Commented. HTTP scheme to use for scraping.
  #    scheme: https
  # -- Commented. TLS configuration to use when scraping the endpoint
  #    tlsConfig:
  #      insecureSkipVerify: true

# -- Use existing configmap if specified otherwise .config values will be used. Check [here](https://docs.victoriametrics.com/vmgateway) for details
configMap: ""

# -- Specify to True if the source for rate-limiting, reading and writing as a VictoriaMetrics Cluster. Must be true for rate limiting
clusterMode: false

# -- Access Control configuration. Check [here](https://docs.victoriametrics.com/vmgateway#access-control) for details
auth:
  # -- Enable/Disable access-control
  enabled: false
  

# -- Rate limiter configuration. Docs are [here](https://docs.victoriametrics.com/vmgateway#rate-limiter)
rateLimiter:
  # -- Enable/Disable rate-limiting
  enabled: false
  datasource:
    # -- Datasource VictoriaMetrics or vmselects. Required. Example http://victoroametrics:8428 or http://vmselect:8481/select/0/prometheus
    url: ""
  # --
  config: {}
  # Config Example
  #  limits:
  #    - type: queries
  #      value: 1000
  #      resolution: minute
  #    - type: queries
  #      value: 10000
  #      resolution: hour
  #    - type: queries
  #      value: 10
  #      resolution: minute
  #      project_id: 5
  #      account_id: 1

read:
  # -- Read endpoint without suffixes, victoriametrics or vmselect. Example http://victoroametrics:8428 or http://vmselect:8481
  url: ""
write:
  # -- Write endpoint without suffixes, victoriametrics or vminsert. Example http://victoroametrics:8428 or http://vminsert:8480
  url: ""

probe:
  # -- Readiness probe
  readiness:
    httpGet: {}
    initialDelaySeconds: 5
    periodSeconds: 15
  # -- Liveness probe
  liveness:
    tcpSocket: {}
    initialDelaySeconds: 5
    periodSeconds: 15
    timeoutSeconds: 5
  # -- Startup probe
  startup: {}

# -- Enterprise license key configuration for VictoriaMetrics enterprise.
# Required only for VictoriaMetrics enterprise. Check docs [here](https://docs.victoriametrics.com/enterprise),
# for more information, visit [site](https://victoriametrics.com/products/enterprise/).
# Request a trial license [here](https://victoriametrics.com/products/enterprise/trial/)
# Supported starting from VictoriaMetrics v1.94.0
license:
  # -- License key
  key: ""

  # -- Use existing secret with license key
  secret:
    # -- Existing secret name
    name: ""
    # -- Key in secret with license key
    key: ""

{{- $global := (dict "Values" (deepCopy .Values) "Release" (deepCopy .Release) "Chart" (deepCopy .Chart) "Template" (deepCopy .Template)) -}}
{{- $app := .Values.server }}
{{- if and $app.enabled (not $app.statefulSet.enabled) -}}
{{ include "victoria-metrics.vmbackupmanager.enforce_license" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with $app.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
  {{- $ctx := merge (deepCopy $global) (dict "extraLabels" $app.extraLabels) }}
  labels: {{ include "victoria-metrics.server.labels" $ctx | nindent 4 }}
  name: {{ template "victoria-metrics.server.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels: {{ include "victoria-metrics.server.matchLabels" . | nindent 6 }}
  replicas: 1
  {{- if $app.persistentVolume.enabled }}
  strategy:
    # Must be "Recreate" when we have a persistent volume
    type: Recreate
  {{- end }}
  template:
    metadata:
      {{- with $app.podAnnotations }}
      annotations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- $ctx := merge (deepCopy $global) (dict "extraLabels" $app.podLabels) }}
      labels: {{ include "victoria-metrics.server.labels" $ctx | nindent 8 }}
    spec:
      {{- with $app.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with $app.schedulerName }}
      schedulerName: {{ . }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      {{- if eq (include "victoria-metrics.hasInitContainer" . ) "true" }}
      initContainers: {{ include "victoria-metrics.initContiners" . | nindent 8 }}
      {{- end }}
      {{- with ($app.imagePullSecrets | default .Values.global.imagePullSecrets) }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: vmsingle
          {{- if $app.securityContext.enabled }}
          securityContext: {{ include "common.compatibility.renderSecurityContext" (dict "secContext" $app.securityContext "context" .) | nindent 12 }}
          {{- end }}
          image: {{ include "vm.image" (merge (deepCopy $global) (dict "app" $app)) }}
          imagePullPolicy: {{ $app.image.pullPolicy }}
          {{- if $app.containerWorkingDir }}
          workingDir: {{ $app.containerWorkingDir }}
          {{- end }}
          args:
            - --retentionPeriod={{ $app.retentionPeriod }}
            - --storageDataPath={{ $app.persistentVolume.mountPath }}
            {{- if $app.scrape.enabled }}
            - --promscrape.config=/scrapeconfig/scrape.yml
            {{- end }}
            {{- range $key, $value := $app.extraArgs }}
            {{- if kindIs "slice" $value }}
            {{- range $v := $value }}
            - --{{ $key }}={{ $v }}
            {{- end }}
            {{- else }}
            - --{{ $key }}={{ $value }}
            {{- end }}
            {{- end }}
            {{- with (include "victoria-metrics.license.flag" .) }}
            - {{ . }}
            {{- end }}
          {{- with $app.envFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.env }}
          env: {{ toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ include "vm.port.from.flag" (dict "flag" $app.extraArgs.httpListenAddr "default" "8428") }}
            {{- with $app.extraArgs.graphiteListenAddr }}
            - name: graphite-tcp
              protocol: TCP
              containerPort: {{ include "split-host-port" . }}
            - name: graphite-udp
              protocol: UDP
              containerPort: {{ include "split-host-port" . }}
            {{- end }}
            {{- with $app.extraArgs.influxListenAddr }}
            - name: influx-tcp
              protocol: TCP
              containerPort: {{ include "split-host-port" . }}
            - name: influx-udp
              protocol: UDP
              containerPort: {{ include "split-host-port" . }}
            {{- end }}
            {{- with $app.extraArgs.opentsdbHTTPListenAddr }}
            - name: opentsdbhttp
              protocol: TCP
              containerPort: {{ include "split-host-port" . }}
            {{- end }}
            {{- with $app.extraArgs.opentsdbListenAddr }}
            - name: opentsdb-tcp
              protocol: TCP
              containerPort: {{ include "split-host-port" . }}
            - name: opentsdb-udp
              protocol: UDP
              containerPort: {{ include "split-host-port" . }}
            {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "readiness"))) }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "liveness"))) }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "startup"))) }}
          startupProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- with $app.persistentVolume }}
            - name: server-volume
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
            {{- end }}
            {{- if $app.scrape.enabled }}
            - name: scrapeconfig
              mountPath: /scrapeconfig
            {{- end }}
            {{- range $app.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- range $app.extraConfigmapMounts }}
            - name: {{ $app.name }}-{{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- range $app.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- include "victoria-metrics.license.mount" . | nindent 12 }}
            {{- with $app.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- $manager := $app.vmbackupmanager }}
        {{- if $manager.enable }}
        - name: vmbackupmanager
          image: {{ include "vm.image" (merge (deepCopy $global) (dict "app" $manager)) }}
          imagePullPolicy: {{ $app.image.pullPolicy }}
          args:
            - --eula={{ $manager.eula }}
            - --disableHourly={{ $manager.disableHourly }}
            - --disableDaily={{ $manager.disableDaily }}
            - --disableWeekly={{ $manager.disableWeekly }}
            - --disableMonthly={{ $manager.disableMonthly }}
            - --keepLastHourly={{ $manager.retention.keepLastHourly }}
            - --keepLastDaily={{ $manager.retention.keepLastDaily }}
            - --keepLastWeekly={{ $manager.retention.keepLastWeekly }}
            - --keepLastMonthly={{ $manager.retention.keepLastMonthly }}
            - --dst={{ printf "%s/%s" $manager.destination (include "victoria-metrics.name" .) }}
            - --storageDataPath={{$app.persistentVolume.mountPath }}
            - --snapshot.createURL=http://localhost:8428/snapshot/create
            - --snapshot.deleteURL=http://localhost:8428/snapshot/delete
            {{- range $key, $value := $manager.extraArgs }}
            - --{{ $key }}={{ $value }}
            {{- end }}
            {{- with (include "victoria-metrics.license.flag" .) }}
            - {{ . }}
            {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $manager "type" "readiness"))) }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $manager "type" "liveness"))) }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $manager "type" "startup"))) }}
          startupProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with $manager.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with $manager.env }}
          env: {{ toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: manager-http
              containerPort: 8300
          volumeMounts:
            {{- with $app.persistentVolume }}
            - name: server-volume
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
            {{- end }}
            {{- with $manager.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- include "victoria-metrics.license.mount" . | nindent 12 }}
        {{- end }}
        {{- with $app.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $app.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if $app.podSecurityContext.enabled }}
      securityContext: {{ include "common.compatibility.renderSecurityContext" (dict "secContext" $app.podSecurityContext "context" .) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "victoria-metrics.serviceAccountName" . }}
      {{- with $app.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ $app.terminationGracePeriodSeconds }}
      volumes:
        {{- if $app.scrape.enabled }}
        - name: scrapeconfig
          configMap:
            name: {{ include "victoria-metrics.server.scrape.configname" . }}
        {{- end }}
        {{- with $app.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: server-volume
          {{- if $app.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if $app.persistentVolume.existingClaim }}{{ $app.persistentVolume.existingClaim }}{{- else }}{{ template "victoria-metrics.server.fullname" . }}{{- end }}
          {{- else }}
          emptyDir: {{ toYaml $app.emptyDir | nindent 12 }}
          {{- end }}
        {{- include "victoria-metrics.license.volume" . | nindent 8 }}
{{- end }}

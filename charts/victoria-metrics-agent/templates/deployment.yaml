{{- $global := (dict "Values" (deepCopy .Values) "Release" (deepCopy .Release) "Chart" (deepCopy .Chart) "Template" (deepCopy .Template)) -}}
{{- if .Values.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  namespace: {{ .Release.Namespace }}
  {{- $ctx := merge (deepCopy $global) (dict "extraLabels" .Values.extraLabels) }}
  labels: {{ include "chart.labels" $ctx | nindent 4 }}
  {{- with .Values.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.horizontalPodAutoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.deployment.strategy }}
  strategy: {{ toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{ include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- $ctx := merge (deepCopy $global) (dict "extraLabels" (merge (deepCopy .Values.extraLabels) (deepCopy .Values.podLabels))) }}
      labels: {{ include "chart.selectorLabels" $ctx | nindent 8 }}
      {{- $annotations := merge (dict "checksum/config" (include (print .Template.BasePath "/configmap.yaml") . | sha256sum)) (deepCopy .Values.podAnnotations) }}
      annotations: {{ toYaml $annotations | nindent 8 }}
    spec:
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{ include "vm.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" .) | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with (.Values.imagePullSecrets | default .Values.global.imagePullSecrets) }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: vmagent
          {{- if .Values.securityContext.enabled }}
          securityContext: {{ include "vm.compatibility.renderSecurityContext" (dict "secContext" .Values.securityContext "context" .) | nindent 12 }}
          {{- end }}
          image: {{ include "vm.image" (merge (deepCopy $global) (dict "app" .Values)) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: {{ .Values.containerWorkingDir }}
          args: {{ include "vmagent.args" . | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .Values.extraArgs.httpListenAddr "default" "8429") }}
            {{- with .Values.extraArgs.graphiteListenAddr }}
            - name: graphite-tcp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            - name: graphite-udp
              protocol: UDP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
            {{- with .Values.extraArgs.influxListenAddr }}
            - name: influx-tcp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            - name: influx-udp
              protocol: UDP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
            {{- with .Values.extraArgs.opentsdbHTTPListenAddr }}
            - name: opentsdbhttp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
            {{- with .Values.extraArgs.opentsdbListenAddr }}
            - name: opentsdb-tcp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            - name: opentsdb-udp
              protocol: UDP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.env }}
          env: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" .Values "type" "readiness"))) }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" .Values "type" "liveness"))) }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" .Values "type" "startup"))) }}
          startupProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmpdata
              mountPath: /tmpData
            - name: config
              mountPath: /config
            {{- range .Values.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- include "vm.license.mount" . | nindent 12 }}
          {{- with .Values.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- range $constraint := . }}
        - {{ toYaml $constraint | nindent 10 | trim }}
          {{- if not $constraint.labelSelector }}
          labelSelector:
            matchLabels: {{ include "chart.selectorLabels" $ | nindent 14 }}
          {{- end }}
        {{- end }}
      {{- end }}
      volumes:
        - name: tmpdata
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "chart.fullname" .) }}
          {{- else }}
          emptyDir: {{ toYaml .Values.emptyDir | nindent 12 }}
          {{- end }}
        - name: config
          configMap:
            name: {{ include "chart.configname" .}}
        {{- range .Values.extraHostPathMounts }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "vm.license.volume" . | nindent 8 }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
{{- end }}

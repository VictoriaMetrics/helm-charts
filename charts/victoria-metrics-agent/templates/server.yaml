{{- $app := .Values }}
{{- $mode := $app.mode }}
{{- if and $mode (hasKey $app $mode) }}
{{- $modeOpts := index $app $mode }}
{{- $ctx := dict "helm" . }}
{{- $fullname := include "vm.plain.fullname" $ctx }}
{{- $ns := include "vm.namespace" $ctx }}
apiVersion: apps/v1
kind: {{ title $mode }}
metadata:
  name: {{ $fullname }}
  namespace: {{ $ns }}
  {{- $_ := set $ctx "extraLabels" $app.extraLabels }}
  labels: {{ include "vm.labels" $ctx | nindent 4 }}
  {{- $_ := unset $ctx "extraLabels" }}
  {{- with .Values.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with $modeOpts.spec }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- if and (not $app.horizontalPodAutoscaling.enabled) (ne $mode "daemonSet") }}
  replicas: {{ $app.replicaCount }}
  {{- end }}
  {{- if eq $mode "statefulSet" }}
  serviceName: {{ $fullname }}
  {{- end }}
  selector:
    matchLabels: {{ include "vm.selectorLabels" $ctx | nindent 6 }}
  template:
    metadata:
      {{- $_ := set $ctx "extraLabels" $app.podLabels }}
      labels: {{ include "vm.podLabels" $ctx | nindent 8 }}
      {{- $_ := unset $ctx "extraLabels" }}
      {{- $annotations := merge (dict "checksum/config" (include (print .Template.BasePath "/configmap.yaml") . | sha256sum)) (deepCopy $app.podAnnotations) }}
      annotations: {{ toYaml $annotations | nindent 8 }}
    spec:
      {{- with $app.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with $app.schedulerName }}
      schedulerName: {{ . }}
      {{- end }}
      {{- if or (.Values.serviceAccount).name (.Values.serviceAccount).create }}
      serviceAccountName: {{ (.Values.serviceAccount).name | default $fullname }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      {{- end }}
      {{- if $app.podSecurityContext.enabled }}
      securityContext: {{ include "vm.securityContext" (dict "securityContext" $app.podSecurityContext "helm" .) | nindent 8 }}
      {{- end }}
      {{- with $app.initContainers }}
      initContainers: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with ($app.imagePullSecrets | default .Values.global.imagePullSecrets) }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: vmagent
          {{- if $app.securityContext.enabled }}
          securityContext: {{ include "vm.securityContext" (dict "securityContext" $app.securityContext "helm" .) | nindent 12 }}
          {{- end }}
          {{- $_ := set $ctx "app" $app }}
          image: {{ include "vm.image" $ctx }}
          imagePullPolicy: {{ $app.image.pullPolicy }}
          {{- with $app.containerWorkingDir }}
          workingDir: {{ . }}
          {{- end }}
          args: {{ include "vmagent.args" $ctx | nindent 12 }}
          {{- with $app.envFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- with $app.env }}
            {{ toYaml .| nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ include "vm.port.from.flag" (dict "flag" $app.extraArgs.httpListenAddr "default" "8429") }}
            {{- with $app.extraArgs.graphiteListenAddr }}
            - name: graphite-tcp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            - name: graphite-udp
              protocol: UDP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
            {{- with $app.extraArgs.influxListenAddr }}
            - name: influx-tcp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            - name: influx-udp
              protocol: UDP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
            {{- with $app.extraArgs.opentsdbHTTPListenAddr }}
            - name: opentsdbhttp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
            {{- with $app.extraArgs.opentsdbListenAddr }}
            - name: opentsdb-tcp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            - name: opentsdb-udp
              protocol: UDP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "readiness"))) }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "liveness"))) }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" $app "type" "startup"))) }}
          startupProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmpdata
              mountPath: /tmpData
            - name: scrape-config
              mountPath: /config/scrape
            {{- with (include "vmagent.rw.config" .) }}
            - name: rw-config
              mountPath: /config/rw
            {{- end }}
            {{- range $app.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- with $app.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- include "vm.license.mount" . | nindent 12 }}
        {{- with $app.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $app.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- range $constraint := . }}
        - {{ toYaml $constraint | nindent 10 | trim }}
          {{- if not $constraint.labelSelector }}
          labelSelector:
            matchLabels: {{ include "vm.selectorLabels" $ctx | nindent 14 }}
          {{- end }}
        {{- end }}
      {{- end }}
      volumes:
        {{- if or (eq $mode "deployment") (not $app.persistentVolume.enabled) $app.persistentVolume.existingClaim }}
        - name: tmpdata
          {{- if or (and (eq $mode "deployment") $app.persistentVolume.enabled) $app.persistentVolume.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ $app.persistentVolume.existingClaim | default $app.persistentVolume.name | default $fullname }}
          {{- else }}
          emptyDir: {{ toYaml $app.emptyDir | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- with (include "vmagent.rw.config" .) }}
        - name: rw-config
          configMap:
            name: {{ $fullname -}}-rw
        {{- end }}
        - name: scrape-config
          configMap:
            name: {{ include "vmagent.scrape.config.name" $ctx }}
        {{- range $app.extraHostPathMounts }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
        {{- end }}
        {{- with $app.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "vm.license.volume" . | nindent 8 }}
  {{- if and (eq $mode "statefulSet") $app.persistentVolume.enabled (not $app.persistentVolume.existingClaim) }}
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: tmpdata
      {{- with $app.persistentVolume.extraLabels }}
      labels: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.persistentVolume.annotations }}
      annotations: {{ toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with $app.persistentVolume.accessModes }}
      accessModes: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.persistentVolume.storageClassName }}
      storageClassName: {{ . }}
      {{- end }}
      {{- with $app.persistentVolume.matchLabels }}
      selector:
        matchLabels: {{ toYaml . | nindent 10 }}
      {{- end }}
      resources:
        requests:
          storage: {{ $app.persistentVolume.size }}
  {{- end }}
{{- end }}

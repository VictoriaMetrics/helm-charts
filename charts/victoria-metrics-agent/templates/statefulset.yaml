{{- if .Values.statefulSet.enabled }}
{{- $ctx := dict "helm" . }}
{{- $fullname := include "vm.plain.fullname" $ctx }}
{{- $ns := include "vm.namespace" $ctx }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullname }}
  namespace: {{ $ns }}
  {{- $_ := set $ctx "extraLabels" .Values.extraLabels }}
  labels: {{ include "vm.labels" $ctx | nindent 4 }}
  {{- $_ := unset $ctx "extraLabels" }}
  {{- with .Values.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.horizontalPodAutoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  serviceName: {{ $fullname }}
  {{- with .Values.statefulSet.updateStrategy }}
  updateStrategy: {{ toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{ include "vm.selectorLabels" $ctx | nindent 6 }}
  template:
    metadata:
      {{- $_ := set $ctx "extraLabels" .Values.podLabels }}
      labels: {{ include "vm.podLabels" $ctx | nindent 8 }}
      {{- $_ := unset $ctx "extraLabels" }}
      {{- $annotations := merge (dict "checksum/config" (include (print .Template.BasePath "/configmap.yaml") . | sha256sum)) (deepCopy .Values.podAnnotations) }}
      annotations: {{ toYaml $annotations | nindent 8 }}
    spec:
      {{- if or (.Values.serviceAccount).name (.Values.serviceAccount).create }}
      serviceAccountName: {{ (.Values.serviceAccount).name | default $fullname }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{ include "vm.securityContext" (dict "securityContext" .Values.podSecurityContext "helm" .) | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with (.Values.imagePullSecrets | default .Values.global.imagePullSecrets) }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: vmagent
          {{- if .Values.securityContext.enabled }}
          securityContext: {{ include "vm.securityContext" (dict "securityContext" .Values.securityContext "helm" .) | nindent 12 }}
          {{- end }}
          {{- $_ := set $ctx "app" .Values }}
          image: {{ include "vm.image" $ctx }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: {{ .Values.containerWorkingDir }}
          args: {{ include "vmagent.args" . | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .Values.extraArgs.httpListenAddr "default" "8429") }}
            {{- with .Values.extraArgs.graphiteListenAddr }}
            - name: graphite-tcp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            - name: graphite-udp
              protocol: UDP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
            {{- with .Values.extraArgs.influxListenAddr }}
            - name: influx-tcp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            - name: influx-udp
              protocol: UDP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
            {{- with .Values.extraArgs.opentsdbHTTPListenAddr }}
            - name: opentsdbhttp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
            {{- with .Values.extraArgs.opentsdbListenAddr }}
            - name: opentsdb-tcp
              protocol: TCP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            - name: opentsdb-udp
              protocol: UDP
              containerPort: {{ include "vm.port.from.flag" (dict "flag" .) }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.env .Values.statefulSet.clusterMode }}
          env:
            {{- if .Values.statefulSet.clusterMode }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- end -}}
            {{- with .Values.env }}
            {{ toYaml .| nindent 12 }}
            {{- end }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" .Values "type" "readiness"))) }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" .Values "type" "liveness"))) }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with (fromYaml (include "vm.probe" (dict "app" .Values "type" "startup"))) }}
          startupProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmpdata
              mountPath: /tmpData
            - name: scrape-config
              mountPath: /config/scrape
            {{- with (include "vmagent.rw.config" .) }}
            - name: rw-config
              mountPath: /config/rw
            {{- end }}
            {{- range .Values.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- with .subPath }}
              subPath: {{ . }}
              {{- end }}
              {{- with .readOnly }}
              readOnly: {{ . }}
              {{- end }}
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- include "vm.license.mount" . | nindent 12 }}
          {{- with .Values.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- range $constraint := . }}
        - {{ toYaml $constraint | nindent 10 | trim }}
          {{- if not $constraint.labelSelector }}
          labelSelector:
            matchLabels: {{ include "vm.selectorLabels" $ctx | nindent 14 }}
          {{- end }}
        {{- end }}
      {{- end }}
      volumes:
        {{- if or (not .Values.persistence.enabled) .Values.persistence.existingClaim }}
        - name: tmpdata
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
          {{- else }}
          emptyDir: {{ toYaml .Values.emptyDir | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- with (include "vmagent.rw.config" .) }}
        - name: rw-config
          configMap:
            name: {{ $fullname }}-rw
        {{- end }}
        - name: scrape-config
          configMap:
            name: {{ include "vmagent.scrape.config.name" $ctx }}
        {{- range .Values.extraHostPathMounts }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- include "vm.license.volume" . | nindent 8 }}
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: tmpdata
      {{- with .Values.persistence.extraLabels }}
      labels: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.persistence.annotations }}
      annotations: {{ toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.persistence.accessModes }}
      accessModes: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.persistence.storageClassName }}
      storageClassName: {{ . }}
      {{- end }}
      {{- with .Values.persistence.matchLabels }}
      selector:
        matchLabels: {{ toYaml . | nindent 10 }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
  {{- end }}
{{- end }}

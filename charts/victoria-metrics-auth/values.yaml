# Default values for victoria-metrics-auth.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas of vmauth
replicaCount: 1

image:
  # -- Victoria Metrics Auth Docker repository and image name
  repository: victoriametrics/vmauth
  # -- Tag of Docker image
  tag: v1.100.1
  # -- Pull policy of Docker image
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

containerWorkingDir: "/"

rbac:
  # Note: The PSP will only be deployed, if Kubernetes (<1.25) supports the resource.
  pspEnabled: true
  annotations: {}
  extraLabels: {}

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name:

# -- See `kubectl explain poddisruptionbudget.spec` for more. Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  # maxUnavailable: 1
  labels: {}

extraArgs:
  envflag.enable: "true"
  envflag.prefix: VM_
  loggerFormat: json

# -- Additional environment variables (ex.: secret tokens, flags) https://github.com/VictoriaMetrics/VictoriaMetrics#environment-variables
env: []

envFrom: []
  #- configMapRef:
  #    name: special-config

# -- Additional hostPath mounts
extraHostPathMounts: []
  # - name: certs-dir
  #   mountPath: /etc/kubernetes/certs
  #   subPath: ""
  #   hostPath: /etc/kubernetes/certs
  #   readOnly: true

# -- Extra Volumes for the pod
extraVolumes: []
  # - name: example
  #   configMap:
  #     name: example

# -- Extra Volume Mounts for the container
extraVolumeMounts: []
  # - name: example
  #   mountPath: /example

extraContainers:
  []
  # - name: config-reloader
  #   image: reloader-image

podSecurityContext: {}
  # fsGroup: 2000

## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  annotations: {}
  extraLabels: {}
  clusterIP: ""
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  servicePort: 8427
  # nodePort: 30000
  type: ClusterIP
  # Ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  # externalTrafficPolicy: "local"
  # healthCheckNodePort: 0

ingress:
  enabled: false
  annotations: {}
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: 'true'

  extraLabels: {}
  hosts: []
  #   - name: vmauth.local
  #     path: /
  #     port: http
  tls: []
  #   - secretName: vmauth-ingress-tls
  #     hosts:
  #       - vmauth.local
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  # -- pathType is only for k8s >= 1.1=
  pathType: Prefix

ingressInternal:
  enabled: false
  annotations: {}
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: 'true'

  extraLabels: {}
  hosts: []
  #   - name: vmauth.local
  #     path: /
  #     port: http
  tls: []
  #   - secretName: vmauth-ingress-tls
  #     hosts:
  #       - vmauth.local
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  # -- pathType is only for k8s >= 1.1=
  pathType: Prefix

# -- We usually recommend not to specify default resources and to leave this as a conscious choice for the user. This also increases chances charts run on environments with little resources, such as Minikube. If you do want to specify resources, uncomment the following lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Annotations to be added to the deployment
annotations: {}

# -- Annotations to be added to pod
podAnnotations: {}

# -- Labels to be added to the deployment and pods
extraLabels: {}

# -- NodeSelector configurations. Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# -- Tolerations configurations. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule"

# -- Affinity configurations
affinity: {}

serviceMonitor:
  enabled: false
  extraLabels: {}
  annotations: {}
  relabelings: []
  metricRelabelings: []
#    interval: 15s
#    scrapeTimeout: 5s
  # -- Commented. HTTP scheme to use for scraping.
#    scheme: https
  # -- Commented. TLS configuration to use when scraping the endpoint
#    tlsConfig:
#      insecureSkipVerify: true

# -- Use existing secret if specified otherwise .config values will be used. Ref: https://victoriametrics.github.io/vmauth.html.
# Configuration in the given secret must be stored under `auth.yml` key.
secretName: ""

# -- Config file content.
config:
  # Arbitrary number of usernames may be put here.
  # Usernames must be unique.
  # users:
    # The user for querying local single-node VictoriaMetrics.
    # All the requests to http://vmauth:8427 with the given Basic Auth (username:password)
    # will be routed to http://localhost:8428 .
    # For example, http://vmauth:8427/api/v1/query is routed to http://localhost:8428/api/v1/query
    #  - username: "local-single-node"
    #    password: "***"
    #    url_prefix: "http://localhost:8428"

    # The user for querying account 123 in VictoriaMetrics cluster
    # See https://github.com/VictoriaMetrics/VictoriaMetrics/blob/cluster/README.md#url-format
    # All the requests to http://vmauth:8427 with the given Basic Auth (username:password)
    # will be routed to http://vmselect:8481/select/123/prometheus .
    # For example, http://vmauth:8427/api/v1/query is routed to http://vmselect:8481/select/123/prometheus/api/v1/select
    #  - username: "cluster-select-account-123"
    #    password: "***"
    #    url_prefix: "http://vmselect:8481/select/123/prometheus"

    # The user for inserting Prometheus data into VictoriaMetrics cluster under account 42
    # See https://github.com/VictoriaMetrics/VictoriaMetrics/blob/cluster/README.md#url-format
    # All the reuqests to http://vmauth:8427 with the given Basic Auth (username:password)
    # will be routed to http://vminsert:8480/insert/42/prometheus .
    # For example, http://vmauth:8427/api/v1/write is routed to http://vminsert:8480/insert/42/prometheus/api/v1/write
    # - username: "cluster-insert-account-42"
    #    password: "***"
    #    url_prefix: "http://vminsert:8480/insert/42/prometheus"

# -- Add extra specs dynamically to this chart
extraObjects: []

# -- Enterprise license key configuration for VictoriaMetrics enterprise.
# Required only for VictoriaMetrics enterprise.
# Documentation - https://docs.victoriametrics.com/enterprise.html,
# for more information, visit https://victoriametrics.com/products/enterprise/ .
# To request a trial license, go to https://victoriametrics.com/products/enterprise/trial/
# Supported starting from VictoriaMetrics v1.94.0
license:
  # -- License key
  key: ""

  # -- Use existing secret with license key
  secret:
    # -- Existing secret name
    name: ""
    # -- Key in secret with license key
    key: ""

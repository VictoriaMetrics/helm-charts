apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "victoria-logs-collector.fullname" . }}-config
  labels:
    app.kubernetes.io/name: {{ include "victoria-logs-collector.fullname" . }}
data:
  vector.yaml: |
    data_dir: /vl-collector

    sources:
      k8s:
        type: kubernetes_logs
        pod_annotation_fields:
          # Disable "pod_ips" as "pod_ip" already includes required info
          pod_ips: ""

    transforms:
      json_parser:
        type: remap
        inputs: [k8s]
        source: |
          .message = parse_json(.message) ?? .message

    {{- if empty .Values.remoteWrite }}
      {{ fail "specify at least one remoteWrite with valid url"}}
    {{ end }}

    sinks:
    {{- range $i, $rw := .Values.remoteWrite }}
      {{/* Validate remoteWrite object */}}
      {{- if empty $rw.url }}
        {{ fail (printf "'url' field must be set for remoteWrite[%d]" $i) }}
      {{- end }}
      {{- range $rwKey, $_ := $rw }}
        {{- if and (ne $rwKey "url") (ne $rwKey "basicAuth") (ne $rwKey "accountID") (ne $rwKey "projectID") (ne $rwKey "tls") (ne $rwKey "extraFields") (ne $rwKey "ignoreFields") }}
          {{ fail (printf "unknown field %q for remoteWrite[%d]" $rwKey $i) }}
        {{- end }}
      {{- end }}
      remote_write_{{ $i }}:
        type: http
        inputs: [json_parser]
        uri: {{ printf "%s/insert/jsonline" (trimSuffix "/" $rw.url) | quote }}
        encoding:
          codec: json
        framing:
          method: newline_delimited
        healthcheck:
          enabled: false
        request:
          headers:
            AccountID: {{ or $rw.accountID 0 | quote }}
            ProjectID: {{ or $rw.projectID 0 | quote }}
            VL-Stream-Fields: kubernetes.pod_name,kubernetes.container_name,kubernetes.pod_namespace
            VL-Msg-Field: message
            VL-Time-Field: timestamp
            {{- with $rw.extraFields }}
            VL-Extra-Fields: {{- $pairs := list -}}
              {{- range $k, $v := $rw.extraFields }}
                {{- $pairs = append $pairs (printf "%s=%s" $k $v) -}}
              {{- end }}
              {{ $pairs | join "," | quote }}
            {{- end }}
            {{- with $rw.ignoreFields }}
            VL-Ignore-Fields: {{- $pairs := list -}}
              {{- range $field := $rw.ignoreFields }}
                {{- $pairs = append $pairs $field -}}
              {{- end }}
              {{ $pairs | join "," | quote }}
            {{- end }}
        compression: "zstd"

        {{- with $rw.basicAuth }}
        {{/* Validate basicAuth */}}
        {{- range $rwKey, $_ := . }}
          {{- if and (ne $rwKey "passwordEnvKey") (ne $rwKey "usernameEnvKey") }}
            {{ fail (printf "unknown field %q for remoteWrite[%d].basicAuth" $rwKey $i) }}
          {{- end }}
        {{- end }}
        auth:
          strategy: "basic"
          password: {{ printf "${%s}" .passwordEnvKey  | quote }}
          user: {{ printf "${%s}" .usernameEnvKey  | quote }}
        {{- end }}

        {{- with $rw.tls }}
        {{/* Validate basicAuth */}}
        {{- range $rwKey, $_ := . }}
          {{- if and (ne $rwKey "caFile") (ne $rwKey "insecureSkipVerify") }}
            {{ fail (printf "unknown field %q for remoteWrite[%d].tls" $rwKey $i) }}
          {{- end }}
        {{- end }}
        tls:
          {{- with .caFile }}
          ca_file: {{ . | quote }}
          {{- end }}
          {{- with .insecureSkipVerify }}
          verify_certificate: false
          {{- end }}
        {{- end }}
    {{- end }}

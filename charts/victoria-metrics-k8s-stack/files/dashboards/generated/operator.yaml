__elements: {}
__inputs: []
__requires:
- id: grafana
  name: Grafana
  type: grafana
  version: 10.4.0
- id: prometheus
  name: Prometheus
  type: datasource
  version: 1.0.0
- id: stat
  name: Stat
  type: panel
  version: ''
- id: text
  name: Text
  type: panel
  version: ''
- id: timeseries
  name: Time series
  type: panel
  version: ''
annotations:
  list:
  - builtIn: 1
    datasource:
      type: datasource
      uid: grafana
    enable: true
    hide: true
    iconColor: rgba(0, 211, 255, 1)
    name: Annotations & Alerts
    target:
      limit: 100
      matchAny: false
      tags: []
      type: dashboard
    type: dashboard
condition: '{{ (index .Values "victoria-metrics-operator" "enabled") }}'
description: Overview for operator VictoriaMetrics v0.25.0 or higher
editable: false
fiscalYearStartMonth: 0
graphTooltip: 0
id: null
links: []
liveNow: false
panels:
- collapsed: false
  datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: PB894574A363DF0AF
  gridPos:
    '{{ .yaxis }}': 0
    h: 1
    w: 24
    x: 0
  id: 8
  panels: []
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: PB894574A363DF0AF
    refId: A
  title: Overview
  type: row
- datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: $ds
  gridPos:
    '{{ .yaxis }}': 1
    h: 3
    w: 4
    x: 0
  id: 24
  options:
    code:
      language: plaintext
      showLineNumbers: false
      showMiniMap: false
    content: '<div style="text-align: center;">$version</div>'
    mode: markdown
  pluginVersion: 10.4.0
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    refId: A
  title: Version
  type: text
- datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: $ds
  description: Number of objects at kubernetes cluster per each controller
  fieldConfig:
    defaults:
      color:
        mode: thresholds
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
    overrides: []
  gridPos:
    '{{ .yaxis }}': 1
    h: 7
    w: 20
    x: 4
  id: 14
  options:
    colorMode: none
    graphMode: area
    justifyMode: auto
    orientation: auto
    reduceOptions:
      calcs:
      - lastNotNull
      fields: ''
      values: false
    showPercentChange: false
    text: {}
    textMode: auto
    wideLayout: true
  pluginVersion: 10.4.0
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    editorMode: code
    expr: max(operator_controller_objects_count{job=~"$job",instance=~"$instance"}) by (controller)
    legendFormat: '{{`{{`}}controller{{`}}`}}'
    range: true
    refId: A
  title: CRD Objects count by controller
  type: stat
- datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: $ds
  fieldConfig:
    defaults:
      color:
        mode: thresholds
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: red
          value: null
        - color: green
          value: 1800
      unit: s
    overrides: []
  gridPos:
    '{{ .yaxis }}': 4
    h: 4
    w: 4
    x: 0
  id: 22
  options:
    colorMode: value
    graphMode: area
    justifyMode: auto
    orientation: auto
    reduceOptions:
      calcs:
      - lastNotNull
      fields: ''
      values: false
    showPercentChange: false
    textMode: auto
    wideLayout: true
  pluginVersion: 10.4.0
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    editorMode: code
    exemplar: false
    expr: vm_app_uptime_seconds{job=~"$job",instance=~"$instance"}
    format: table
    instant: true
    interval: ''
    legendFormat: '{{`{{`}}instance{{`}}`}}'
    range: false
    refId: A
  title: Uptime
  type: stat
- datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: $ds
  fieldConfig:
    defaults:
      color:
        mode: palette-classic
      custom:
        axisBorderShow: false
        axisCenteredZero: false
        axisColorMode: text
        axisLabel: ''
        axisPlacement: auto
        barAlignment: 0
        drawStyle: line
        fillOpacity: 0
        gradientMode: none
        hideFrom:
          legend: false
          tooltip: false
          viz: false
        insertNulls: false
        lineInterpolation: linear
        lineWidth: 1
        pointSize: 5
        scaleDistribution:
          type: linear
        showPoints: never
        spanNulls: false
        stacking:
          group: A
          mode: none
        thresholdsStyle:
          mode: 'off'
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
      unit: short
    overrides: []
  gridPos:
    '{{ .yaxis }}': 8
    h: 13
    w: 12
    x: 0
  id: 12
  options:
    legend:
      calcs:
      - mean
      - max
      displayMode: table
      placement: bottom
      showLegend: true
    tooltip:
      mode: multi
      sort: desc
  pluginVersion: 10.4.0
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    editorMode: code
    expr: sum(rate(controller_runtime_reconcile_total{job=~"$job",instance=~"$instance",result=~"requeue_after|requeue|success"}[$__rate_interval])) by(controller) > 0
    legendFormat: '{{`{{`}}controller{{`}}`}}'
    range: true
    refId: A
  title: Reconciliation rate by controller
  type: timeseries
- datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: $ds
  description: ''
  fieldConfig:
    defaults:
      color:
        mode: palette-classic
      custom:
        axisBorderShow: false
        axisCenteredZero: false
        axisColorMode: text
        axisLabel: ''
        axisPlacement: auto
        barAlignment: 0
        drawStyle: line
        fillOpacity: 10
        gradientMode: none
        hideFrom:
          legend: false
          tooltip: false
          viz: false
        insertNulls: false
        lineInterpolation: linear
        lineWidth: 1
        pointSize: 5
        scaleDistribution:
          type: linear
        showPoints: never
        spanNulls: false
        stacking:
          group: A
          mode: none
        thresholdsStyle:
          mode: 'off'
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
      unit: short
    overrides: []
  gridPos:
    '{{ .yaxis }}': 8
    h: 13
    w: 12
    x: 12
  id: 16
  options:
    legend:
      calcs:
      - mean
      - max
      displayMode: table
      placement: bottom
      showLegend: true
    tooltip:
      mode: multi
      sort: desc
  pluginVersion: 10.4.0
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    editorMode: code
    expr: sum(rate(operator_log_messages_total{job=~"$job",instance=~"$instance"}[$__rate_interval])) by (level)
    legendFormat: '{{`{{`}}label_name{{`}}`}}'
    range: true
    refId: A
  title: Log message rate
  type: timeseries
- collapsed: true
  datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: PB894574A363DF0AF
  gridPos:
    '{{ .yaxis }}': 21
    h: 1
    w: 24
    x: 0
  id: 6
  panels:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    description: Non zero metrics indicates about error with CR object definition (typos or incorrect values) or errors with kubernetes API connection.
    fieldConfig:
      defaults:
        color:
          mode: palette-classic
        custom:
          axisBorderShow: false
          axisCenteredZero: false
          axisColorMode: text
          axisLabel: ''
          axisPlacement: auto
          barAlignment: 0
          drawStyle: line
          fillOpacity: 10
          gradientMode: none
          hideFrom:
            legend: false
            tooltip: false
            viz: false
          insertNulls: false
          lineInterpolation: linear
          lineWidth: 1
          pointSize: 5
          scaleDistribution:
            type: linear
          showPoints: never
          spanNulls: false
          stacking:
            group: A
            mode: none
          thresholdsStyle:
            mode: 'off'
        mappings: []
        thresholds:
          mode: absolute
          steps:
          - color: green
            value: null
          - color: red
            value: 80
        unit: short
      overrides: []
    gridPos:
      '{{ .yaxis }}': 2
      h: 8
      w: 12
      x: 0
    id: 10
    options:
      legend:
        calcs:
        - lastNotNull
        - max
        displayMode: table
        placement: bottom
        showLegend: true
      tooltip:
        mode: multi
        sort: none
    pluginVersion: 10.4.0
    targets:
    - datasource:
        type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
        uid: $ds
      editorMode: code
      exemplar: false
      expr: sum(rate(controller_runtime_reconcile_errors_total{job=~"$job",instance=~"$instance"}[$__rate_interval])) by(controller) > 0
      instant: false
      legendFormat: '{{`{{`}}controller{{`}}`}}'
      range: true
      refId: A
    - datasource:
        type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
        uid: $ds
      editorMode: code
      expr: sum(rate(controller_runtime_reconcile_total{job=~"$job",instance=~"$instance",result="error"}[$__rate_interval])) by(controller) > 0
      hide: false
      legendFormat: '{{`{{`}}label_name{{`}}`}}'
      range: true
      refId: B
    title: reconcile errors by controller
    type: timeseries
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    description: "Operator limits number of reconcilation events to 5 events per 2 seconds.\n For now, this limit is applied only for vmalert and vmagent controllers.\n It should reduce load at kubernetes cluster and increase operator performance."
    fieldConfig:
      defaults:
        color:
          mode: palette-classic
        custom:
          axisBorderShow: false
          axisCenteredZero: false
          axisColorMode: text
          axisLabel: ''
          axisPlacement: auto
          barAlignment: 0
          drawStyle: line
          fillOpacity: 10
          gradientMode: none
          hideFrom:
            legend: false
            tooltip: false
            viz: false
          insertNulls: false
          lineInterpolation: linear
          lineWidth: 1
          pointSize: 5
          scaleDistribution:
            type: linear
          showPoints: never
          spanNulls: false
          stacking:
            group: A
            mode: none
          thresholdsStyle:
            mode: 'off'
        mappings: []
        thresholds:
          mode: absolute
          steps:
          - color: green
            value: null
          - color: red
            value: 80
        unit: short
      overrides: []
    gridPos:
      '{{ .yaxis }}': 2
      h: 8
      w: 12
      x: 12
    id: 18
    options:
      legend:
        calcs: []
        displayMode: list
        placement: bottom
        showLegend: true
      tooltip:
        mode: multi
        sort: none
    pluginVersion: 10.4.0
    targets:
    - datasource:
        type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
        uid: $ds
      editorMode: code
      expr: sum(rate(operator_reconcile_throttled_events_total[$__rate_interval])) by(controller)
      legendFormat: '{{`{{`}}controller{{`}}`}}'
      range: true
      refId: A
    title: throttled reconcilation events
    type: timeseries
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    description: Number of objects waiting in the queue for reconciliation. Non-zero values indicate that operator cannot process CR objects changes with the given resources.
    fieldConfig:
      defaults:
        color:
          mode: palette-classic
        custom:
          axisBorderShow: false
          axisCenteredZero: false
          axisColorMode: text
          axisLabel: ''
          axisPlacement: auto
          barAlignment: 0
          drawStyle: line
          fillOpacity: 10
          gradientMode: none
          hideFrom:
            legend: false
            tooltip: false
            viz: false
          insertNulls: false
          lineInterpolation: linear
          lineWidth: 1
          pointSize: 5
          scaleDistribution:
            type: linear
          showPoints: never
          spanNulls: false
          stacking:
            group: A
            mode: none
          thresholdsStyle:
            mode: 'off'
        mappings: []
        thresholds:
          mode: absolute
          steps:
          - color: green
            value: null
          - color: red
            value: 80
        unit: short
      overrides: []
    gridPos:
      '{{ .yaxis }}': 10
      h: 11
      w: 12
      x: 0
    id: 20
    options:
      legend:
        calcs:
        - lastNotNull
        - max
        displayMode: table
        placement: bottom
        showLegend: true
      tooltip:
        mode: multi
        sort: desc
    pluginVersion: 10.4.0
    targets:
    - datasource:
        type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
        uid: $ds
      editorMode: code
      expr: max(workqueue_depth{job=~"$job",instance=~"$instance"}) by (name)
      legendFormat: '{{`{{`}}label_name{{`}}`}}'
      range: true
      refId: A
    title: Working queue depth
    type: timeseries
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    description: " For controllers with StatefulSet it's ok to see latency greater then 3 seconds. It could be vmalertmanager,vmcluster or vmagent in statefulMode.\n\n For other controllers, latency greater then 1 second may indicate issues with kubernetes cluster or operator's performance.\n "
    fieldConfig:
      defaults:
        color:
          mode: palette-classic
        custom:
          axisBorderShow: false
          axisCenteredZero: false
          axisColorMode: text
          axisLabel: ''
          axisPlacement: auto
          barAlignment: 0
          drawStyle: line
          fillOpacity: 10
          gradientMode: none
          hideFrom:
            legend: false
            tooltip: false
            viz: false
          insertNulls: false
          lineInterpolation: linear
          lineWidth: 1
          pointSize: 5
          scaleDistribution:
            type: linear
          showPoints: never
          spanNulls: false
          stacking:
            group: A
            mode: none
          thresholdsStyle:
            mode: 'off'
        mappings: []
        thresholds:
          mode: absolute
          steps:
          - color: green
            value: null
          - color: red
            value: 80
        unit: s
      overrides: []
    gridPos:
      '{{ .yaxis }}': 10
      h: 11
      w: 12
      x: 12
    id: 26
    options:
      legend:
        calcs:
        - mean
        - max
        displayMode: table
        placement: bottom
        showLegend: true
      tooltip:
        mode: multi
        sort: desc
    pluginVersion: 10.4.0
    targets:
    - datasource:
        type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
        uid: $ds
      editorMode: code
      expr: histogram_quantile(0.99, sum(rate(controller_runtime_reconcile_time_seconds_bucket[$__rate_interval])) by(le,controller))
      legendFormat: q.99 {{`{{`}}controller{{`}}`}}
      range: true
      refId: A
    title: Reconcilation latency by controller
    type: timeseries
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: PB894574A363DF0AF
    refId: A
  title: Troubleshooting
  type: row
- collapsed: false
  datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: PB894574A363DF0AF
  gridPos:
    '{{ .yaxis }}': 22
    h: 1
    w: 24
    x: 0
  id: 4
  panels: []
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: PB894574A363DF0AF
    refId: A
  title: resources
  type: row
- datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: $ds
  fieldConfig:
    defaults:
      color:
        mode: palette-classic
      custom:
        axisBorderShow: false
        axisCenteredZero: false
        axisColorMode: text
        axisLabel: ''
        axisPlacement: auto
        barAlignment: 0
        drawStyle: line
        fillOpacity: 10
        gradientMode: none
        hideFrom:
          legend: false
          tooltip: false
          viz: false
        insertNulls: false
        lineInterpolation: linear
        lineWidth: 1
        pointSize: 5
        scaleDistribution:
          type: linear
        showPoints: never
        spanNulls: false
        stacking:
          group: A
          mode: none
        thresholdsStyle:
          mode: 'off'
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
      unit: bytes
    overrides: []
  gridPos:
    '{{ .yaxis }}': 23
    h: 8
    w: 12
    x: 0
  id: 28
  options:
    legend:
      calcs:
      - mean
      - lastNotNull
      - max
      displayMode: table
      placement: bottom
      showLegend: true
    tooltip:
      mode: multi
      sort: desc
  pluginVersion: 10.4.0
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    editorMode: code
    expr: sum(go_memstats_sys_bytes{job=~"$job", instance=~"$instance"})
    legendFormat: requested from system
    range: true
    refId: A
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    editorMode: code
    expr: sum(go_memstats_heap_inuse_bytes{job=~"$job", instance=~"$instance"})
    hide: false
    legendFormat: heap inuse
    range: true
    refId: B
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    editorMode: code
    expr: sum(go_memstats_stack_inuse_bytes{job=~"$job", instance=~"$instance"})
    hide: false
    legendFormat: stack inuse
    range: true
    refId: C
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    editorMode: code
    expr: sum(process_resident_memory_bytes{job=~"$job", instance=~"$instance"})
    hide: false
    legendFormat: resident
    range: true
    refId: D
  title: Memory usage ($instance)
  type: timeseries
- datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: $ds
  fieldConfig:
    defaults:
      color:
        mode: palette-classic
      custom:
        axisBorderShow: false
        axisCenteredZero: false
        axisColorMode: text
        axisLabel: ''
        axisPlacement: auto
        axisSoftMin: 0
        barAlignment: 0
        drawStyle: line
        fillOpacity: 10
        gradientMode: none
        hideFrom:
          legend: false
          tooltip: false
          viz: false
        insertNulls: false
        lineInterpolation: linear
        lineWidth: 1
        pointSize: 5
        scaleDistribution:
          type: linear
        showPoints: never
        spanNulls: false
        stacking:
          group: A
          mode: none
        thresholdsStyle:
          mode: 'off'
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
      unit: short
    overrides: []
  gridPos:
    '{{ .yaxis }}': 23
    h: 8
    w: 12
    x: 12
  id: 30
  options:
    legend:
      calcs: []
      displayMode: list
      placement: bottom
      showLegend: true
    tooltip:
      mode: multi
      sort: none
  pluginVersion: 10.4.0
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    editorMode: code
    expr: rate(process_cpu_seconds_total{job=~"$job", instance=~"$instance"}[$__rate_interval])
    legendFormat: CPU cores used
    range: true
    refId: A
  title: CPU ($instance)
  type: timeseries
- datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: $ds
  fieldConfig:
    defaults:
      color:
        mode: palette-classic
      custom:
        axisBorderShow: false
        axisCenteredZero: false
        axisColorMode: text
        axisLabel: ''
        axisPlacement: auto
        barAlignment: 0
        drawStyle: line
        fillOpacity: 10
        gradientMode: none
        hideFrom:
          legend: false
          tooltip: false
          viz: false
        insertNulls: false
        lineInterpolation: linear
        lineWidth: 1
        pointSize: 5
        scaleDistribution:
          type: linear
        showPoints: never
        spanNulls: false
        stacking:
          group: A
          mode: none
        thresholdsStyle:
          mode: 'off'
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
      unit: short
    overrides: []
  gridPos:
    '{{ .yaxis }}': 31
    h: 8
    w: 12
    x: 0
  id: 32
  options:
    legend:
      calcs: []
      displayMode: list
      placement: bottom
      showLegend: true
    tooltip:
      mode: multi
      sort: none
  pluginVersion: 10.4.0
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    editorMode: code
    expr: sum(go_goroutines{job=~"$job", instance=~"$instance"})
    legendFormat: goroutines
    range: true
    refId: A
  title: Goroutines ($instance)
  type: timeseries
- datasource:
    type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    uid: $ds
  fieldConfig:
    defaults:
      color:
        mode: palette-classic
      custom:
        axisBorderShow: false
        axisCenteredZero: false
        axisColorMode: text
        axisLabel: ''
        axisPlacement: auto
        barAlignment: 0
        drawStyle: line
        fillOpacity: 10
        gradientMode: none
        hideFrom:
          legend: false
          tooltip: false
          viz: false
        insertNulls: false
        lineInterpolation: linear
        lineWidth: 1
        pointSize: 5
        scaleDistribution:
          type: linear
        showPoints: never
        spanNulls: false
        stacking:
          group: A
          mode: none
        thresholdsStyle:
          mode: 'off'
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
      unit: s
    overrides: []
  gridPos:
    '{{ .yaxis }}': 31
    h: 8
    w: 12
    x: 12
  id: 34
  options:
    legend:
      calcs:
      - mean
      - max
      displayMode: table
      placement: bottom
      showLegend: true
    tooltip:
      mode: multi
      sort: none
  pluginVersion: 10.4.0
  targets:
  - datasource:
      type: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
      uid: $ds
    editorMode: code
    expr: |-
      sum(rate(go_gc_duration_seconds_sum{job=~"$job", instance=~"$instance"}[$__rate_interval]))
      /
      sum(rate(go_gc_duration_seconds_count{job=~"$job", instance=~"$instance"}[$__rate_interval]))
    legendFormat: avg gc duration
    range: true
    refId: A
  title: GC duration ($instance)
  type: timeseries
refresh: ''
schemaVersion: 39
tags:
- operator
- VictoriaMetrics
- vm-k8s-stack
templating:
  list:
  - current:
      selected: true
      text: VictoriaMetrics
      value: PF64AB64142051B50
    hide: 0
    includeAll: false
    multi: false
    name: ds
    options: []
    query: '{{ default "prometheus" .Values.grafana.defaultDatasourceType }}'
    queryValue: ''
    refresh: 1
    regex: ''
    skipUrlSync: false
    type: datasource
  - current: {}
    datasource:
      type: prometheus
      uid: $ds
    definition: label_values(operator_log_messages_total,job)
    hide: 0
    includeAll: false
    multi: false
    name: job
    options: []
    query:
      query: label_values(operator_log_messages_total,job)
      refId: StandardVariableQuery
    refresh: 2
    regex: ''
    skipUrlSync: false
    sort: 0
    type: query
  - current: {}
    datasource:
      type: prometheus
      uid: $ds
    definition: label_values(operator_log_messages_total{job=~"$job"},instance)
    hide: 0
    includeAll: true
    multi: false
    name: instance
    options: []
    query:
      query: label_values(operator_log_messages_total{job=~"$job"},instance)
      refId: StandardVariableQuery
    refresh: 2
    regex: ''
    skipUrlSync: false
    sort: 0
    type: query
  - current: {}
    datasource:
      type: prometheus
      uid: $ds
    definition: label_values(vm_app_version{job="$job", instance=~"$instance"},version)
    hide: 2
    includeAll: false
    multi: false
    name: version
    options: []
    query:
      qryType: 1
      query: label_values(vm_app_version{job="$job", instance=~"$instance"},version)
      refId: PrometheusVariableQueryEditor-VariableQuery
    refresh: 1
    regex: ''
    skipUrlSync: false
    sort: 2
    type: query
time:
  from: now-15m
  to: now
timepicker: {}
timezone: '{{ .Values.grafana.defaultDashboardsTimezone }}'
title: VictoriaMetrics - operator
uid: 1H179hunk
version: 1
weekStart: ''

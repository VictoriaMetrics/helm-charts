concurrency: 2
condition: '{{ true }}'
interval: 30s
name: vmsingle
rules:
- alert: DiskRunsOutOfSpaceIn3Days
  annotations:
    dashboard: '{{ index .Values.grafana.ingress.hosts 0 }}/d/wNf0q_kZk?viewPanel=73&var-instance={{`{{`}} $labels.instance {{`}}`}}'
    description: "Taking into account current ingestion rate, free disk space will be enough only for {{`{{`}} $value | humanizeDuration {{`}}`}} on instance {{`{{`}} $labels.instance {{`}}`}}.\n Consider to limit the ingestion rate, decrease retention or scale the disk space if possible."
    summary: 'Instance {{`{{`}} $labels.instance {{`}}`}} will run out of disk space soon'
  condition: '{{ true }}'
  expr: |-
    vm_free_disk_space_bytes / ignoring(path)
    (
      rate(vm_rows_added_to_storage_total[1d])
      * scalar(
        sum(vm_data_size_bytes{type!~"indexdb.*"}) /
        sum(vm_rows{type!~"indexdb.*"})
       )
    ) < 3 * 24 * 3600 > 0
  for: 30m
  labels:
    severity: critical
- alert: DiskRunsOutOfSpace
  annotations:
    dashboard: '{{ index .Values.grafana.ingress.hosts 0 }}/d/wNf0q_kZk?viewPanel=53&var-instance={{`{{`}} $labels.instance {{`}}`}}'
    description: "Disk utilisation on instance {{`{{`}} $labels.instance {{`}}`}} is more than 80%.\n Having less than 20% of free disk space could cripple merge processes and overall performance. Consider to limit the ingestion rate, decrease retention or scale the disk space if possible."
    summary: 'Instance {{`{{`}} $labels.instance {{`}}`}} (job={{`{{`}} $labels.job {{`}}`}}) will run out of disk space soon'
  condition: '{{ true }}'
  expr: |-
    sum(vm_data_size_bytes) by (job,instance,{{ .Values.global.clusterLabel }}) /
    (
     sum(vm_free_disk_space_bytes) by (job,instance,{{ .Values.global.clusterLabel }}) +
     sum(vm_data_size_bytes) by (job,instance,{{ .Values.global.clusterLabel }})
    ) > 0.8
  for: 30m
  labels:
    severity: critical
- alert: RequestErrorsToAPI
  annotations:
    dashboard: '{{ index .Values.grafana.ingress.hosts 0 }}/d/wNf0q_kZk?viewPanel=35&var-instance={{`{{`}} $labels.instance {{`}}`}}'
    description: 'Requests to path {{`{{`}} $labels.path {{`}}`}} are receiving errors. Please verify if clients are sending correct requests.'
    summary: 'Too many errors served for path {{`{{`}} $labels.path {{`}}`}} (instance {{`{{`}} $labels.instance {{`}}`}})'
  condition: '{{ true }}'
  expr: increase(vm_http_request_errors_total[5m]) > 0
  for: 15m
  labels:
    severity: warning
- alert: RowsRejectedOnIngestion
  annotations:
    dashboard: '{{ index .Values.grafana.ingress.hosts 0 }}/d/wNf0q_kZk?viewPanel=58&var-instance={{`{{`}} $labels.instance {{`}}`}}'
    description: 'VM is rejecting to ingest rows on "{{`{{`}} $labels.instance {{`}}`}}" due to the following reason: "{{`{{`}} $labels.reason {{`}}`}}"'
    summary: 'Some rows are rejected on "{{`{{`}} $labels.instance {{`}}`}}" on ingestion attempt'
  condition: '{{ true }}'
  expr: rate(vm_rows_ignored_total[5m]) > 0
  for: 15m
  labels:
    severity: warning
- alert: TooHighChurnRate
  annotations:
    dashboard: '{{ index .Values.grafana.ingress.hosts 0 }}/d/wNf0q_kZk?viewPanel=66&var-instance={{`{{`}} $labels.instance {{`}}`}}'
    description: "VM constantly creates new time series on \"{{`{{`}} $labels.instance {{`}}`}}\".\n This effect is known as Churn Rate.\n High Churn Rate tightly connected with database performance and may result in unexpected OOM's or slow queries."
    summary: 'Churn rate is more than 10% on "{{`{{`}} $labels.instance {{`}}`}}" for the last 15m'
  condition: '{{ true }}'
  expr: |-
    (
       sum(rate(vm_new_timeseries_created_total[5m])) by (instance,{{ .Values.global.clusterLabel }})
       /
       sum(rate(vm_rows_inserted_total[5m])) by (instance,{{ .Values.global.clusterLabel }})
     ) > 0.1
  for: 15m
  labels:
    severity: warning
- alert: TooHighChurnRate24h
  annotations:
    dashboard: '{{ index .Values.grafana.ingress.hosts 0 }}/d/wNf0q_kZk?viewPanel=66&var-instance={{`{{`}} $labels.instance {{`}}`}}'
    description: "The number of created new time series over last 24h is 3x times higher than current number of active series on \"{{`{{`}} $labels.instance {{`}}`}}\".\n This effect is known as Churn Rate.\n High Churn Rate tightly connected with database performance and may result in unexpected OOM's or slow queries."
    summary: 'Too high number of new series on "{{`{{`}} $labels.instance {{`}}`}}" created over last 24h'
  condition: '{{ true }}'
  expr: |-
    sum(increase(vm_new_timeseries_created_total[24h])) by (instance,{{ .Values.global.clusterLabel }})
    >
    (sum(vm_cache_entries{type="storage/hour_metric_ids"}) by (instance,{{ .Values.global.clusterLabel }}) * 3)
  for: 15m
  labels:
    severity: warning
- alert: TooHighSlowInsertsRate
  annotations:
    dashboard: '{{ index .Values.grafana.ingress.hosts 0 }}/d/wNf0q_kZk?viewPanel=68&var-instance={{`{{`}} $labels.instance {{`}}`}}'
    description: 'High rate of slow inserts on "{{`{{`}} $labels.instance {{`}}`}}" may be a sign of resource exhaustion for the current load. It is likely more RAM is needed for optimal handling of the current number of active time series. See also https://github.com/VictoriaMetrics/VictoriaMetrics/issues/3976#issuecomment-1476883183'
    summary: 'Percentage of slow inserts is more than 5% on "{{`{{`}} $labels.instance {{`}}`}}" for the last 15m'
  condition: '{{ true }}'
  expr: |-
    (
       sum(rate(vm_slow_row_inserts_total[5m])) by (instance,{{ .Values.global.clusterLabel }})
       /
       sum(rate(vm_rows_inserted_total[5m])) by (instance,{{ .Values.global.clusterLabel }})
     ) > 0.05
  for: 15m
  labels:
    severity: warning
- alert: LabelsLimitExceededOnIngestion
  annotations:
    dashboard: '{{ index .Values.grafana.ingress.hosts 0 }}/d/wNf0q_kZk?viewPanel=74&var-instance={{`{{`}} $labels.instance {{`}}`}}'
    description: "VictoriaMetrics limits the number of labels per each metric with `-maxLabelsPerTimeseries` command-line flag.\n This prevents ingestion of metrics with too many labels. Please verify that `-maxLabelsPerTimeseries` is configured correctly or that clients which send these metrics aren't misbehaving."
    summary: 'Metrics ingested in ({{`{{`}} $labels.instance {{`}}`}}) are exceeding labels limit'
  condition: '{{ true }}'
  expr: increase(vm_metrics_with_dropped_labels_total[5m]) > 0
  for: 15m
  labels:
    severity: warning

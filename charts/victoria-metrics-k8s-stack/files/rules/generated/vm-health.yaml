condition: '{{ true }}'
name: vm-health
rules:
- alert: TooManyRestarts
  annotations:
    description: 'Job {{`{{`}} $labels.job {{`}}`}} (instance {{`{{`}} $labels.instance {{`}}`}}) has restarted more than twice in the last 15 minutes. It might be crashlooping.

      '
    summary: '{{`{{`}} $labels.job {{`}}`}} too many restarts (instance {{`{{`}} $labels.instance {{`}}`}})'
  condition: '{{ true }}'
  expr: changes(process_start_time_seconds{job=~".*(victoriametrics|vmselect|vminsert|vmstorage|vmagent|vmalert|vmsingle|vmalertmanager|vmauth).*"}[15m]) > 2
  labels:
    severity: critical
- alert: ServiceDown
  annotations:
    description: '{{`{{`}} $labels.instance {{`}}`}} of job {{`{{`}} $labels.job {{`}}`}} has been down for more than 2 minutes.'
    summary: 'Service {{`{{`}} $labels.job {{`}}`}} is down on {{`{{`}} $labels.instance {{`}}`}}'
  condition: '{{ true }}'
  expr: up{job=~".*(victoriametrics|vmselect|vminsert|vmstorage|vmagent|vmalert|vmsingle|vmalertmanager|vmauth).*"} == 0
  for: 2m
  labels:
    severity: critical
- alert: ProcessNearFDLimits
  annotations:
    description: 'Exhausting OS file descriptors limit can cause severe degradation of the process.

      Consider to increase the limit as fast as possible.

      '
    summary: 'Number of free file descriptors is less than 100 for "{{`{{`}} $labels.job {{`}}`}}"("{{`{{`}} $labels.instance {{`}}`}}") for the last 5m'
  condition: '{{ true }}'
  expr: (process_max_fds - process_open_fds) < 100
  for: 5m
  labels:
    severity: critical
- alert: TooHighMemoryUsage
  annotations:
    description: 'Too high memory usage may result into multiple issues such as OOMs or degraded performance.

      Consider to either increase available memory or decrease the load on the process.

      '
    summary: 'It is more than 80% of memory used by "{{`{{`}} $labels.job {{`}}`}}"("{{`{{`}} $labels.instance {{`}}`}}")'
  condition: '{{ true }}'
  expr: (min_over_time(process_resident_memory_anon_bytes[10m]) / vm_available_memory_bytes) > 0.8
  for: 5m
  labels:
    severity: critical
- alert: TooHighCPUUsage
  annotations:
    description: 'Too high CPU usage may be a sign of insufficient resources and make process unstable. Consider to either increase available CPU resources or decrease the load on the process.

      '
    summary: 'More than 90% of CPU is used by "{{`{{`}} $labels.job {{`}}`}}"("{{`{{`}} $labels.instance {{`}}`}}") during the last 5m'
  condition: '{{ true }}'
  expr: rate(process_cpu_seconds_total[5m]) / process_cpu_cores_available > 0.9
  for: 5m
  labels:
    severity: critical
- alert: TooManyLogs
  annotations:
    description: 'Logging rate for job \"{{`{{`}} $labels.job {{`}}`}}\" ({{`{{`}} $labels.instance {{`}}`}}) is {{`{{`}} $value {{`}}`}} for last 15m. Worth to check logs for specific error messages.

      '
    summary: 'Too many logs printed for job "{{`{{`}} $labels.job {{`}}`}}" ({{`{{`}} $labels.instance {{`}}`}})'
  condition: '{{ true }}'
  expr: sum(increase(vm_log_messages_total{level="error"}[5m])) without (app_version, location) > 0
  for: 15m
  labels:
    severity: warning
- alert: TooManyTSIDMisses
  annotations:
    description: 'The rate of TSID misses during query lookups is too high for \"{{`{{`}} $labels.job {{`}}`}}\" ({{`{{`}} $labels.instance {{`}}`}}).

      Make sure you''re running VictoriaMetrics of v1.85.3 or higher.

      Related issue https://github.com/VictoriaMetrics/VictoriaMetrics/issues/3502

      '
    summary: 'Too many TSID misses for job "{{`{{`}} $labels.job {{`}}`}}" ({{`{{`}} $labels.instance {{`}}`}})'
  condition: '{{ true }}'
  expr: rate(vm_missing_tsids_for_metric_id_total[5m]) > 0
  for: 10m
  labels:
    severity: critical
- alert: ConcurrentInsertsHitTheLimit
  annotations:
    description: "The limit of concurrent inserts on instance {{`{{`}} $labels.instance {{`}}`}} depends on the number of CPUs.\nUsually, when component constantly hits the limit it is likely the component is overloaded and requires more CPU.\nIn some cases for components like vmagent or vminsert the alert might trigger if there are too many clients\nmaking write attempts. If vmagent's or vminsert's CPU usage and network saturation are at normal level, then \nit might be worth adjusting `-maxConcurrentInserts` cmd-line flag.\n"
    summary: '{{`{{`}} $labels.job {{`}}`}} on instance {{`{{`}} $labels.instance {{`}}`}} is constantly hitting concurrent inserts limit'
  condition: '{{ true }}'
  expr: avg_over_time(vm_concurrent_insert_current[1m]) >= vm_concurrent_insert_capacity
  for: 15m
  labels:
    severity: warning
- alert: IndexDBRecordsDrop
  annotations:
    description: "VictoriaMetrics could skip registering new timeseries during ingestion if they fail the validation process. \nFor example, `reason=too_long_item` means that time series cannot exceed 64KB. Please, reduce the number \nof labels or label values for such series. Or enforce these limits via `-maxLabelsPerTimeseries` and \n`-maxLabelValueLen` command-line flags.\n"
    summary: 'IndexDB skipped registering items during data ingestion with reason={{`{{`}} $labels.reason {{`}}`}}.'
  condition: '{{ true }}'
  expr: increase(vm_indexdb_items_dropped_total[5m]) > 0
  labels:
    severity: critical
- alert: TooLongLabelValues
  annotations:
    description: "The maximum length of a label value is limited via `-maxLabelValueLen` cmd-line flag. \nLonger label values are truncated and may result into time series overlapping.\nPlease, check your logs to find which labels were truncated and  \neither reduce the size of label values or increase `-maxLabelValueLen`.\n"
    summary: 'VictoriaMetrics truncates too long label values'
  condition: '{{ true }}'
  expr: increase(vm_too_long_label_values_total[5m]) > 0
  labels:
    severity: critical
- alert: TooLongLabelNames
  annotations:
    description: 'The maximum length of a label name is limited by 256 bytes.  Longer label names are truncated and may result into time series overlapping.'
    summary: 'VictoriaMetrics truncates too long label names'
  condition: '{{ true }}'
  expr: increase(vm_too_long_label_names_total[5m]) > 0
  labels:
    severity: critical

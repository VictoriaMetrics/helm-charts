# Default values for victoria-metrics-k8s-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000



nodeSelector: {}

tolerations: []

affinity: {}


##############

victoria-metrics-operator:
  ## all values for victoria-metrics-operator helm chart can be specified here
  createCRD: true
  operator:
    # -- By default, operator converts prometheus-operator objects.
    disable_promethues_converter: true



vmsingle:
  enabled: true
  # spec for VMSingle crd
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmsinglespec
  spec:
    retentionPeriod: "14"



alertmanager:
  enabled: true
  # spec for VMAlertmanager crd
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmalertmanagerspec
  spec: {}

  # if this one defined, it will be used for alertmanager configuration and config parameter will be ignored
  # secretName: "alertmanager-config"

  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'webhook'
    receivers:
      - name: 'webhook'
        webhook_configs:
          - url: 'http://slack:30500/'



vmalert:
  enabled: true
  # spec for VMAlert crd
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmalertspec
  spec:
    evaluationInterval: 15s
    remoteRead:
      lookback: 1h



vmagent:
  enabled: true
  # spec for VMAgent crd
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmagentspec
  spec:
    scrapeInterval: 25s



### dependencies
grafana:
  enabled: true
  ## all values for grafana helm chart can be specified here
  sidecar:
    datasources:
      enabled: true
      createVMReplicasDatasources: false
    dashboards:
      enabled: true

  ## Configure additional grafana datasources (passed through tpl)
  ## ref: http://docs.grafana.org/administration/provisioning/#datasources
  additionalDataSources: []
  # - name: prometheus-sample
  #   access: proxy
  #   basicAuth: true
  #   basicAuthPassword: pass
  #   basicAuthUser: daco
  #   editable: false
  #   jsonData:
  #       tlsSkipVerify: true
  #   orgId: 1
  #   type: prometheus
  #   url: https://{{ printf "%s-prometheus.svc" .Release.Name }}:9090
  #   version: 1

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

  dashboards:
    default:
      victoriametrics:
        url: https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/dashboards/victoriametrics.json
      vmagent:
        url: https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/dashboards/vmagent.json
      nodeexporter:
        gnetId: 1860
        datasource: VictoriaMetrics


  vmServiceScrape:
    # wheter we should create a service scrape resource for node-exporter
    enabled: true

    # spec for VMServiceScrape crd 
    # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
    spec: {}



prometheus-node-exporter:
  enabled: true
  ## all values for prometheus-node-exporter helm chart can be specified here

  vmServiceScrape:
    # wheter we should create a service scrape resource for node-exporter
    enabled: true

    # spec for VMServiceScrape crd 
    # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
    spec: {}



kube-state-metrics:
  enabled: true
  ## all values for kube-state-metrics helm chart can be specified here

  # spec for VMServiceScrape crd 
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
  vmServiceScrape:
    spec: {}

    # selector



### Service Monitors
kubelet:
  enabled: true
  spec: {}

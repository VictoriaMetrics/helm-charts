nameOverride: ""
fullnameOverride: ""

operator:
  cleanupCRD: true
  cleanupSA:
    create: true
    name: ""
  kubectlImage:
    repository: bitnami/kubectl
    tag: 1.16
    pullPolicy: IfNotPresent


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## Create default rules for monitoring the cluster
##
defaultRules:
  create: true
  rules:
    etcd: true
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverAvailability: true
    kubeApiserverSlos: true
    kubelet: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: true
    kubeStateMetrics: true
    network: true
    node: true

  ## Runbook url prefix for default rules
  runbookUrl: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#
  ## Reduce app namespace alert scope
  appNamespacesTarget: ".*"

  ## Labels for default rules
  labels: {}
  ## Annotations for default rules
  annotations: {}

  ## Additional labels for PrometheusRule alerts
  additionalRuleLabels: {}



##############

# victoria-metrics-operator dependency chart configuration. For possible values refer to https://github.com/VictoriaMetrics/helm-charts/tree/master/charts/victoria-metrics-operator#parameters
victoria-metrics-operator:
  ## all values for victoria-metrics-operator helm chart can be specified here
  createCRD: false
  operator:
    # -- By default, operator converts prometheus-operator objects.
    disable_promethues_converter: true


vmsingle:
  enabled: true
  # spec for VMSingle crd
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmsinglespec
  spec:
    retentionPeriod: "14"
    replicaCount: 1



alertmanager:
  enabled: true
  # spec for VMAlertmanager crd
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmalertmanagerspec
  spec:
    externalURL: ""
    routePrefix: /

    # if this one defined, it will be used for alertmanager configuration and config parameter will be ignored
    # configSecret: "alertmanager-config"

  config:
    global:
      resolve_timeout: 5m
      slack_api_url: "http://slack:30500/"
    templates:
    - "/etc/vm/configs/**/*.tmpl"
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack-monitoring'
      routes:
      ###################################################
      ## Duplicate code_owner routes to teams
      ## These will send alerts to team channels but continue
      ## processing through the rest of the tree to handled by on-call
      - match_re:
          code_owner: '.+'
        routes:
          - match: {severity: info|warning|critical}
            continue: true
            receiver: slack-code-owners

      ###################################################
      ## Standard on-call routes
      - match_re:
          severity: info|warning|critical
        receiver: slack-monitoring
        continue: true
      
    receivers:
      - name: "slack-monitoring"
        slack_configs:
        - channel: "#channel"
          send_resolved: true
          title: '{{ template "slack.monzo.title" . }}'
          icon_emoji: '{{ template "slack.monzo.icon_emoji" . }}'
          color: '{{ template "slack.monzo.color" . }}'
          text: '{{ template "slack.monzo.text" . }}'
          actions:
          - type: button
            text: 'Runbook :green_book:'
            url: '{{ (index .Alerts 0).Annotations.runbook }}'
          - type: button
            text: 'Query :mag:'
            url: '{{ (index .Alerts 0).GeneratorURL }}'
          - type: button
            text: 'Dashboard :grafana:'
            url: '{{ (index .Alerts 0).Annotations.dashboard }}'
          - type: button
            text: 'Silence :no_bell:'
            url: '{{ template "__alert_silence_link" . }}'
          - type: button
            text: '{{ template "slack.monzo.link_button_text" . }}'
            url: '{{ .CommonAnnotations.link_url }}'
      - name: slack-code-owners
        slack_configs:
        - channel: '#{{- template "slack.monzo.code_owner_channel" . -}}'
          send_resolved: true
          title: '{{ template "slack.monzo.title" . }}'
          icon_emoji: '{{ template "slack.monzo.icon_emoji" . }}'
          color: '{{ template "slack.monzo.color" . }}'
          text: '{{ template "slack.monzo.text" . }}'
          actions:
          - type: button
            text: 'Runbook :green_book:'
            url: '{{ (index .Alerts 0).Annotations.runbook }}'
          - type: button
            text: 'Query :mag:'
            url: '{{ (index .Alerts 0).GeneratorURL }}'
          - type: button
            text: 'Dashboard :grafana:'
            url: '{{ (index .Alerts 0).Annotations.dashboard }}'
          - type: button
            text: 'Silence :no_bell:'
            url: '{{ template "__alert_silence_link" . }}'
          - type: button
            text: '{{ template "slack.monzo.link_button_text" . }}'
            url: '{{ .CommonAnnotations.link_url }}'

  # better alert templates for slack
  # source https://gist.github.com/milesbxf/e2744fc90e9c41b47aa47925f8ff6512
  monzoTemplate:
    enabled: true

  ingress:
    enabled: false
    hosts: []
    # - alertmanager.domain.com
    # additional path except for routePrefix
    paths: []



vmalert:
  enabled: true
  # spec for VMAlert crd
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmalertspec
  spec:
    evaluationInterval: 15s
    externalLabels:
      cluster: cluster-name



vmagent:
  enabled: true
  # spec for VMAgent crd
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmagentspec
  spec:
    scrapeInterval: 25s
    externalLabels:
      cluster: cluster-name



#################################################
###              dependencies               #####
#################################################
# Grafana dependency chart configuration. For possible values refer to https://github.com/grafana/helm-charts/tree/main/charts/grafana#configuration
grafana:
  enabled: true
  ## all values for grafana helm chart can be specified here
  sidecar:
    datasources:
      enabled: true
      createVMReplicasDatasources: false
    dashboards:
      enabled: true

  ## Configure additional grafana datasources (passed through tpl)
  ## ref: http://docs.grafana.org/administration/provisioning/#datasources
  additionalDataSources: []
  # - name: prometheus-sample
  #   access: proxy
  #   basicAuth: true
  #   basicAuthPassword: pass
  #   basicAuthUser: daco
  #   editable: false
  #   jsonData:
  #       tlsSkipVerify: true
  #   orgId: 1
  #   type: prometheus
  #   url: https://{{ printf "%s-prometheus.svc" .Release.Name }}:9090
  #   version: 1

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

  dashboards:
    default:
      victoriametrics:
        url: https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/dashboards/victoriametrics.json
      vmagent:
        url: https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/dashboards/vmagent.json
      nodeexporter:
        gnetId: 1860
        revision: 22
        datasource: VictoriaMetrics

  defaultDashboardsEnabled: true

  vmServiceScrape:
    # wheter we should create a service scrape resource for node-exporter
    enabled: true

    # spec for VMServiceScrape crd 
    # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
    spec: {}



# prometheus-node-exporter dependency chart configuration. For possible values refer to https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus-node-exporter/values.yaml
prometheus-node-exporter:
  enabled: true

  ## all values for prometheus-node-exporter helm chart can be specified here
  podLabels:
    ## Add the 'node-exporter' label to be used by serviceMonitor to match standard common usage in rules and grafana dashboards
    ##
    jobLabel: node-exporter
  extraArgs:
    - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$

  vmServiceScrape:
    # wheter we should create a service scrape resource for node-exporter
    enabled: true

    # spec for VMServiceScrape crd 
    # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
    spec:
      jobLabel: jobLabel



# kube-state-metrics dependency chart configuration. For possible values refer to https://github.com/kubernetes/kube-state-metrics/blob/master/charts/kube-state-metrics/values.yaml
kube-state-metrics:
  enabled: true
  ## all values for kube-state-metrics helm chart can be specified here

  # spec for VMServiceScrape crd 
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
  vmServiceScrape:
    spec: {}

  #TODO: selector override for kube-state-metrics deployed separatelly



### Service Monitors
## Component scraping the kubelets
kubelet:
  enabled: true

  ## Enable scraping /metrics/cadvisor from kubelet's service
  cadvisor: true
  ## Enable scraping /metrics/probes from kubelet's service
  probes: true
  # spec for VMNodeScrape crd 
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmnodescrapespec
  spec:
    scheme: "https"
    honorLabels: true
    interval: "30s"
    scrapeTimeout: "5s"
    tlsConfig:
      insecureSkipVerify: true
      caFile: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    bearerTokenFile: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    relabelConfigs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - sourceLabels: [__metrics_path__]
        targetLabel: metrics_path
      - targetLabel: "job"
        replacement: "kubelet"


    
## Component scraping the kube api server
kubeApiServer:
  enabled: true
  # spec for VMServiceScrape crd 
  # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
  spec:
    endpoints:
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      # bearerTokenSecret:
      #   key: ""
      port: https
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        serverName: kubernetes
    jobLabel: component
    namespaceSelector:
      matchNames:
      - default
    selector:
      matchLabels:
        component: apiserver
        provider: kubernetes



## Component scraping the kube controller manager
kubeControllerManager:
  enabled: true

  ## If your kube controller manager is not deployed as a pod, specify IPs it can be found on
  ##
  endpoints: []
  # - 10.141.4.22
  # - 10.141.4.23
  # - 10.141.4.24

  ## If using kubeControllerManager.endpoints only the port and targetPort are used
  ##
  service:
    enabled: true
    port: 10252
    targetPort: 10252
    # selector:
    #   component: kube-controller-manager


  vmServiceScrape:
    enabled: true
    # spec for VMServiceScrape crd 
    # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
    spec:
      jobLabel: jobLabel
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          # bearerTokenSecret:
          #   key: ""
          port: http-metrics
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            serverName: kubernetes



## Component scraping coreDns. Use either this or kubeDns
##
coreDns:
  enabled: true
  service:
    enabled: true
    port: 9153
    targetPort: 9153
    # selector:
    #   k8s-app: kube-dns

  vmServiceScrape:
    enabled: true
    # spec for VMServiceScrape crd 
    # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
    spec: 
      endpoints:
      - port: http-metrics
        bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    


## Component scraping etcd
##
kubeEtcd:
  enabled: true

  ## If your etcd is not deployed as a pod, specify IPs it can be found on
  ##
  endpoints: []
  # - 10.141.4.22
  # - 10.141.4.23
  # - 10.141.4.24

  ## Etcd service. If using kubeEtcd.endpoints only the port and targetPort are used
  ##
  service:
    enabled: true
    port: 2379
    targetPort: 2379
    # selector:
    #   component: etcd

  vmServiceScrape:
    enabled: true
    # spec for VMServiceScrape crd 
    # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
    spec:
      jobLabel: jobLabel
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          # bearerTokenSecret:
          #   key: ""
          port: http-metrics
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt



## Component scraping kube scheduler
##
kubeScheduler:
  enabled: true

  ## If your kube scheduler is not deployed as a pod, specify IPs it can be found on
  ##
  endpoints: []
  # - 10.141.4.22
  # - 10.141.4.23
  # - 10.141.4.24

  ## If using kubeScheduler.endpoints only the port and targetPort are used
  ##
  service:
    enabled: true
    port: 10251
    targetPort: 10251
    # selector:
    #   component: kube-scheduler

  vmServiceScrape:
    enabled: true
    # spec for VMServiceScrape crd 
    # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
    spec:
      jobLabel: jobLabel
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          # bearerTokenSecret:
          #   key: ""
          port: http-metrics
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt



## Component scraping kube proxy
##
kubeProxy:
  enabled: false

  ## If your kube proxy is not deployed as a pod, specify IPs it can be found on
  ##
  endpoints: []
  # - 10.141.4.22
  # - 10.141.4.23
  # - 10.141.4.24

  service:
    enabled: true
    port: 10249
    targetPort: 10249
    # selector:
    #   k8s-app: kube-proxy

  vmServiceScrape:
    enabled: true
    # spec for VMServiceScrape crd 
    # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
    spec:
      jobLabel: jobLabel
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          # bearerTokenSecret:
          #   key: ""
          port: http-metrics
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

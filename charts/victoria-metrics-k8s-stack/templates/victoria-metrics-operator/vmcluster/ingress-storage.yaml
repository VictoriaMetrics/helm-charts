{{- $app := .Values.vmcluster }}
{{- if and $app.enabled $app.ingress.storage.enabled }}
{{- $ingress := $app.ingress.storage }}
{{- with .Values.vmcluster.name -}}
  {{- $_ := set $.Values.vmcluster.vmstorage.name . }}
{{- end }}
{{- $ctx := dict "helm" . "appKey" "vmstorage" -}}
{{- $_ := set $ctx.helm.Values "vmstorage" .Values.vmcluster.vmstorage }}
{{- $serviceName := include "vm.service" $ctx -}}
{{- $servicePort := $app.spec.vmstorage.port | default 8482 }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $serviceName }}
  namespace: {{ .Release.Namespace }}
  {{- $extraLabels := dict "app.kubernetes.io/component" (printf "%s-vmcluster" (include "victoria-metrics-k8s-stack.name" .)) }}
  {{- $_ := set $ctx "extraLabels" (merge $extraLabels $ingress.labels) }}
  labels: {{ include "victoria-metrics-k8s-stack.labels" $ctx | nindent 4 }}
  {{- with $ingress.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with $ingress.ingressClassName }}
  ingressClassName: {{ . }}
  {{- end }}
  {{- with $ingress.tls }}
  tls: {{ tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  rules:
    {{- $hosts := $ingress.hosts  | default (list "") }}
    {{- range $hosts }}
    - http:
        paths:
          {{- with $ingress.extraPaths }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          - backend:
              service:
                name: {{ $serviceName }}
                port:
                  number: {{ $servicePort }}
            {{- with $ingress.path }}
            path: {{ . }}
            {{- end }}
            {{- with $ingress.pathType }}
            pathType: {{ . }}
            {{- end }}
      {{- with . }}
      host: {{ tpl . $ }}
      {{- end }}
    {{- end }}
{{- end }}

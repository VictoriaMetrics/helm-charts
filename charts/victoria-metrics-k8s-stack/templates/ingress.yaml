{{- $ns := include "vm.namespace" . }}
{{- range $name, $config := .Values }}
  {{- if and (kindIs "map" $config) (hasKey $config "ingress") ($config.enabled) (empty (index $.Subcharts $name)) }}
    {{- $ingresses := ternary (dict $name $config.ingress) $config.ingress (hasKey $config.ingress "enabled") }}
    {{- range $ingName, $ingress := $ingresses }}
      {{- if $ingress.enabled }}
        {{- $appKey := ternary $name (list $name $ingName) (eq $name $ingName) -}}
        {{- $ctx := dict "helm" $ "appKey" $appKey -}}
        {{- $fullname := include "vm.service" $ctx }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullname }}
  namespace: {{ $ns }}
  {{- $extraLabels := dict "app.kubernetes.io/component" (printf "%s-%s" (include "victoria-metrics-k8s-stack.name" $) $name) }}
  {{- $_ := set $ctx "extraLabels" (merge $extraLabels $ingress.labels) }}
  labels: {{ include "victoria-metrics-k8s-stack.labels" $ctx | nindent 4 }}
  {{- with $ingress.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with $ingress.ingressClassName }}
  ingressClassName: {{ . }}
  {{- end }}
  {{- with $ingress.tls }}
  tls: {{ tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  rules:
    {{- $hosts := $ingress.hosts | default (list "") }}
    {{- range $hosts }}
    - http:
        paths:
          {{- with $ingress.extraPaths }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          - backend:
              service:
                name: {{ $fullname }}
                port:
                  name: {{ $ingress.portName | default "http" }}
            {{- with ($ingress.path | default (dig "spec" "extraArgs" "http.pathPrefix" "/" $config)) }}
            path: {{ tpl . $ }}
            {{- end }}
            {{- with $ingress.pathType }}
            pathType: {{ . }}
            {{- end }}
      {{- with . }}
      host: {{ tpl . $ }}
      {{- end }}
    {{- end }}

      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}

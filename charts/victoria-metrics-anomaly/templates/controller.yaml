{{- $global := (dict "Values" (deepCopy .Values) "Release" (deepCopy .Release) "Chart" (deepCopy .Chart) "Template" (deepCopy .Template)) -}}
{{- include "vm.enterprise.only" . -}}

{{- if not .Values.config.reader.datasource_url -}}
{{ fail "Please provide url for reading data from VictoriaMetrics. You need to specify url in `config.reader.datasource_url` parameter in values.yaml"}}
{{- end -}}

{{- if not .Values.config.writer.datasource_url -}}
{{ fail "Please provide url for writing data to VictoriaMetrics. You need to specify url in `config.writer.datasource_url` parameter  in values.yaml"}}
{{- end -}}

{{- if and (not .Values.config.reader.queries) (not .Values.config.preset) -}}
{{ fail "At least one query must be specified. You nee to add queries in `config.reader.queries` parameter in values.yaml"}}
{{- end -}}

apiVersion: apps/v1
{{- if .Values.persistentVolume.enabled }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "chart.fullname" . }}
spec:
  selector:
    matchLabels: {{ include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels: {{ include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.podSecurityContext}}
      securityContext: {{ include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" .) | nindent 8 }}
      {{- end }}
      containers:
        - name: model
          image: {{ include "vm.image" (merge $global (dict "app" .Values)) }}
          workingDir: {{ .Values.containerWorkingDir }}
          {{- with (dig "monitoring" "pull" "port" "" .Values.config) }}
          ports:
            - containerPort: {{ . }}
              name: metrics
          {{- end }}
          args:
            - /etc/config/config.yml
            {{- with (include "chart.license.flag" .) }}
            - {{ . }}
            {{- end}}
          {{- with .Values.envFrom }}
          envFrom: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- $env := default list }}
          {{- if .Values.persistentVolume.enabled }}
          {{- $env = append $env (dict "name" "VMANOMALY_MODEL_DUMPS_DIR" "value" "/tmp/vmanomaly-model-dumps") }}
          {{- end }}
          {{- with (concat $env (.Values.env | default list)) }}
          env: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.securityContext.enabled }}
          securityContext: {{ include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.securityContext "context" .) | nindent 12 }}
          {{- end }}
          {{- with .Values.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/config
          {{- include "chart.license.mount" . | nindent 12 }}
          {{- if .Values.persistentVolume.enabled }}
            - name: models-dump
              mountPath: /tmp/vmanomaly-model-dumps
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "chart.fullname" . }}
      {{- include "chart.license.volume" . | nindent 8}}
      {{- if .Values.persistentVolume.existingClaim }}
        - name: models-dump
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolume.existingClaim }}
      {{- end }}
  {{- if and .Values.persistentVolume.enabled (not .Values.persistentVolume.existingClaim) }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: models-dump
        {{- with .Values.persistentVolume.annotations }}
        annotations: {{ toYaml . | nindent 10 }}
        {{- end }}
      spec:
        {{- with .Values.persistentVolume.accessModes }}
        accessModes: {{ toYaml . | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: "{{ .Values.persistentVolume.size }}"
        {{- with .Values.persistentVolume.storageClass }}
        storageClassName: {{ "" . (eq "-" .) }}
        {{- end }}
        {{- with .Values.persistentVolume.matchLabels }}
        selector:
          matchLabels: {{ toYaml . | nindent 12 }}
        {{- end }}
{{- end }}

# Default values for victoria-metrics-anomaly.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # -- Victoria Metrics anomaly Docker repository and image name
  repository: docker.io/victoriametrics/vmanomaly
  # -- Tag of Docker image
  tag: "" # rewrites Chart.AppVersion
  # -- Pull policy of Docker image
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

containerWorkingDir: "/vmanomaly"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name:

# -- See `kubectl explain poddisruptionbudget.spec` for more. Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  # maxUnavailable: 1
  labels: {}

extraArgs:
  loggerFormat: json

# -- Additional environment variables (ex.: secret tokens, flags)
env: []

envFrom: []
  #- configMapRef:
  #    name: special-config

# -- Additional hostPath mounts
extraHostPathMounts: []
  # - name: certs-dir
  #   mountPath: /etc/kubernetes/certs
  #   subPath: ""
  #   hostPath: /etc/kubernetes/certs
#   readOnly: true

# -- Extra Volumes for the pod
extraVolumes: []
  # - name: example
  #   configMap:
#     name: example

# -- Extra Volume Mounts for the container
extraVolumeMounts: []
  # - name: example
#   mountPath: /example

extraContainers: []
  # - name: config-reloader
#   image: reloader-image

podSecurityContext: {}
# fsGroup: 2000

## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

# -- Annotations to be added to the deployment
annotations: {}

# -- Annotations to be added to pod
podAnnotations: {}

# -- NodeSelector configurations. Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# -- Tolerations configurations. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
#   value: "value"
#   effect: "NoSchedule|PreferNoSchedule"

# -- Affinity configurations
affinity: {}

serviceMonitor:
  enabled: false
  extraLabels: {}
  annotations: {}

# -- should be true and means that you have the legal right to run a vmanomaly
# that can either be a signed contract or an email with confirmation to run the service in a trial period
# https://victoriametrics.com/legal/esa/
eula: false

# -- Full [vmanomaly config section](https://docs.victoriametrics.com/anomaly-detection/components/)
config:
  # -- [Scheduler section](https://docs.victoriametrics.com/anomaly-detection/components/scheduler/)
  schedulers:
    # Scheduler alias
    scheduler_periodic_1m:
      # -- Scheduler class
      class: "scheduler.periodic.PeriodicScheduler"
      # -- How often to completely retrain the models. If missing value of infer_every is used and retrain on every inference run.
      fit_every: "2h"
      # -- What time range to use for training the models. Must be at least 1 second.
      fit_window: "14d"
      # -- How often a model will write its conclusions on newly added data. Must be at least 1 second.
      infer_every: "1m"

  # -- [Models section](https://docs.victoriametrics.com/anomaly-detection/components/models/)
  models:
    # -- Model alias
    prophet_model:
      # -- Supported model classs by vmanomaly
      class: "model.prophet.ProphetModel"
      # -- Inner model args (key-value pairs) accepted by
      # -- Arguments specific to [model](https://docs.victoriametrics.com/anomaly-detection/components/models/)
      args: {}
        #interval_width: 0.98

  # -- [Reader section](https://docs.victoriametrics.com/anomaly-detection/components/reader/)
  reader:
    # -- Name of the class needed to enable reading from VictoriaMetrics or Prometheus. VmReader is the default option, if not specified.
    class: "reader.vm.VmReader"
    # -- Datasource URL address. Required for example "http://single-victoria-metrics-single-server.default.svc.cluster.local:8428" or "http://cluster-victoria-metrics-cluster-vminsert.default.svc.cluster.local:8480/insert/"
    datasource_url: ""
    # -- For VictoriaMetrics Cluster version only, tenants are identified by accountID or accountID:projectID. See VictoriaMetrics Cluster multitenancy docs
    tenant_id: ""
    # -- Required. PromQL/MetricsQL query to select data in format: QUERY_ALIAS: "QUERY". As accepted by "/query_range?query=%s".
    queries: {}
    #  active_timeseries: 'sum(vm_cache_entries{type="storage/hour_metric_ids"})'
    #  churn_rate: 'sum(rate(vm_new_timeseries_created_total[5m]))'
    #  ingestion_rate: 'sum(rate(vm_rows_inserted_total[5m])) by (type,accountID) > 0'
    #  insertion_rate: 'sum(rate(vm_http_requests_total{path=~"/api/v1/write|.*insert.*"}[5m])) by (path) > 0'
    #  slow_inserts: 'sum(rate(vm_slow_row_inserts_total[5m])) / sum(rate(vm_rows_inserted_total[5m]))'
    # -- Frequency of the points returned. Will be converted to "/query_range?step=%s" param (in seconds). **Required** since 1.9.0.
    sampling_period: '1m'

  # -- [Writer section](https://docs.victoriametrics.com/anomaly-detection/components/writer/)
  writer:
    # -- Name of the class needed to enable writing to VictoriaMetrics or Prometheus. VmWriter is the default option, if not specified.
    class: "writer.vm.VmWriter"
    # -- Datasource URL address. Required for example "http://single-victoria-metrics-single-server.default.svc.cluster.local:8428" or "http://cluster-victoria-metrics-cluster-vminsert.default.svc.cluster.local:8480/insert/"
    datasource_url: ""
    # -- For VictoriaMetrics Cluster version only, tenants are identified by accountID or accountID:projectID. See VictoriaMetrics Cluster multitenancy docs
    tenant_id: ""

# -- License key configuration for vmanomaly. See [docs](https://docs.victoriametrics.com/vmanomaly.html#licensing)
# Required starting from v1.5.0.
license:
  # -- License key for vmanomaly
  key: ""

  # -- Use existing secret with license key for vmanomaly
  secret:
    # -- Existing secret name
    name: ""
    # -- Key in secret with license key
    key: ""

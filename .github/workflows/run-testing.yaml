name: "Test charts"

on:
  push:
    paths-ignore:
      - 'packages/**'
      - 'index.yaml'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'packages/**'
      - 'index.yaml'
      - '**.md'

env:
  HELM_VERSION: 3.15.1

jobs:
  get-changed-charts:
    name: Get changed charts
    runs-on: ubuntu-22.04
    outputs:
      charts: ${{ steps.charts-diff.outputs.charts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run changed-files with dir_names
        id: changed-charts
        uses: tj-actions/changed-files@v44
        with:
          files: |
            charts/**

      # This steps gets output of changes-charts step and filters out only chart names
      # changed-charts output is space-separated list of changed paths
      # this bash pipeline extracts unique chart names from the list
      - name: Build charts diff
        id: charts-diff
        run: |
          charts=$(echo "${{ steps.changed-charts.outputs.all_modified_files }}" | sed 's/ /\n/g' | awk -F/ '{print $2}' | sort | uniq | jq -ncR '[inputs]')
          echo "charts=$charts" >> $GITHUB_OUTPUT

  install-chart:
    name: Install chart
    runs-on: ubuntu-22.04
    needs: get-changed-charts
    if: ${{ needs.get-changed-charts.outputs.charts != '[""]' }}
    strategy:
      matrix:
        chart: ${{ fromJSON(needs.get-changed-charts.outputs.charts) }}
        k8s_version: ["v1.28.12", "v1.29.7", "v1.30.3"]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@v0.11.1
        with:
          setup-tools: |
            helmv3
            kubectl
          helm: "${{ env.HELM_VERSION }}"
          kubectl: "${{ matrix.k8s_version }}"

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Create k3d cluster
        uses: nolar/setup-k3d-k3s@v1
        with:
          version: ${{ matrix.k8s_version }}

      - name: Remove node taints
        run: |
          kubectl taint --all=true nodes node.cloudprovider.kubernetes.io/uninitialized- || true

      - name: Run chart-testing (install)
        env:
          VMANOMALY_LICENSE_CICD: ${{ secrets.VMANOMALY_LICENSE_CICD }}
        run: |
          kubectl create namespace ${{ matrix.chart }}-testing
          kubectl create secret -n=${{ matrix.chart }}-testing generic vmanomaly-license --from-literal=license=$VMANOMALY_LICENSE_CICD
          helm dep update charts/${{ matrix.chart }}
          # Skip run for k8s stack chart as it fails CRD check
          if [ "${{ matrix.chart }}" != "victoria-metrics-k8s-stack" ] && [ "${{ matrix.chart }}" != "victoria-metrics-distributed" ]; then
            helm template charts/${{ matrix.chart }} \
              --namespace ${{ matrix.chart }}-testing \
              --values ./hack/helm/${{ matrix.chart }}/e2e/simple.yaml \
              --validate | kubectl apply -f - --dry-run=server
          fi
          ct install \
            --namespace ${{ matrix.chart }}-testing \
            --config .github/ci/ct.yaml \
            --charts "charts/${{ matrix.chart }}" \
            --helm-extra-set-args "--values ./hack/helm/${{ matrix.chart }}/e2e/simple.yaml" --skip-clean-up
